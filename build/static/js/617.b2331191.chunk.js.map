{"version":3,"file":"static/js/617.b2331191.chunk.js","mappings":"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","sources":["hooks/dashboard/useDashboardCalculations.js","components/dashboard/DashboardCard.jsx","components/dashboard/DashboardSection.jsx","pages/Dashboard.jsx"],"sourcesContent":["import { useMemo } from \"react\";\nimport dayjs from \"dayjs\";\nimport {\n    Box,\n    Typography,\n    Badge\n  } from \"@mui/material\";\n  import CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\n  import PendingIcon from \"@mui/icons-material/Pending\";\n  import WarningIcon from \"@mui/icons-material/Warning\";\n  import MonetizationOnIcon from \"@mui/icons-material/MonetizationOn\";\n  import AccountBalanceIcon from \"@mui/icons-material/AccountBalance\";\n  import AccountBalanceWalletIcon from \"@mui/icons-material/AccountBalanceWallet\";\n  import BarChartIcon from \"@mui/icons-material/BarChart\";\n  import PaidIcon from \"@mui/icons-material/Payments\";\n\nconst calcStatus = (loan) => {\n    const totalRepayable = Number(loan.totalRepayable || 0);\n    const repaidAmount = Number(loan.repaidAmount || 0);\n  \n    if (repaidAmount >= totalRepayable && totalRepayable > 0) {\n      return \"Paid\";\n    }\n    const now = dayjs();\n    const due = dayjs(loan.dueDate);\n    if (due.isBefore(now, \"day\")) {\n      return \"Overdue\";\n    }\n    return \"Active\";\n  };\n  \n  const getTrendPercentage = (current, previous) => {\n    if (previous === 0) return current > 0 ? \"New\" : null;\n    const change = ((current - previous) / previous) * 100;\n    return `${change >= 0 ? \"+\" : \"\"}${change.toFixed(1)}%`;\n  };\n\nexport const useDashboardCalculations = (loans, selectedMonth, settings, isMobile) => {\n    const iconMap = useMemo(() => {\n        const iconSize = { fontSize: isMobile ? 20 : 24 }; // MODIFIED: Reduced mobile icon size to 20\n        return {\n          totalLoans: <MonetizationOnIcon sx={iconSize} />,\n          paidLoans: <CheckCircleIcon sx={iconSize} />,\n          activeLoans: <PendingIcon sx={iconSize} />,\n          overdueLoans: (overdueCount) => (\n            <Badge\n              badgeContent={overdueCount > 0 ? overdueCount : null}\n              color=\"error\"\n              overlap=\"circular\"\n              anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n              sx={{\n                \"& .MuiBadge-badge\": {\n                  height: \"18px\",\n                  minWidth: \"18px\",\n                  padding: \"0 4px\",\n                  fontSize: \"12px\",\n                },\n              }}\n            >\n              <WarningIcon sx={iconSize} />\n            </Badge>\n          ),\n          totalDisbursed: <MonetizationOnIcon sx={iconSize} />,\n          investedCapital: <AccountBalanceWalletIcon sx={iconSize} />,\n          availableCapital: <AccountBalanceWalletIcon sx={iconSize} />,\n          totalCollected: <PaidIcon sx={iconSize} />,\n          totalOutstanding: <WarningIcon sx={iconSize} />,\n          expectedProfit: <BarChartIcon sx={iconSize} />,\n          actualProfit: <CheckCircleIcon sx={iconSize} />,\n          averageLoan: <MonetizationOnIcon sx={iconSize} />,\n          partnerDividends: <AccountBalanceIcon sx={iconSize} />,\n        };\n      }, [isMobile]);\n\n    const { loansForCalculations, defaultCards } = useMemo(() => {\n        const loansForCalculations = loans || [];\n        const loansThisMonth = loansForCalculations.filter((loan) =>\n          loan.startDate.startsWith(selectedMonth)\n        );\n        const previousMonth = dayjs(selectedMonth).subtract(1, \"month\").format(\"YYYY-MM\");\n        const loansLastMonth = loansForCalculations.filter(\n          (loan) => dayjs(loan.startDate).format(\"YYYY-MM\") === previousMonth\n        );\n\n        const totalDisbursed = loansThisMonth.reduce(\n          (sum, loan) => sum + Number(loan.principal || 0),\n          0\n        );\n        const totalCollected = loansThisMonth.reduce(\n          (sum, loan) => sum + Number(loan.repaidAmount || 0),\n          0\n        );\n        const totalDisbursedLastMonth = loansLastMonth.reduce(\n          (sum, loan) => sum + Number(loan.principal || 0),\n          0\n        );\n        const totalCollectedLastMonth = loansLastMonth.reduce(\n          (sum, loan) => sum + Number(loan.repaidAmount || 0),\n          0\n        );\n        \n        const actualProfit = loansThisMonth\n            .filter(\n                (loan) =>\n                calcStatus(loan) === \"Paid\" &&\n                Number(loan.repaidAmount || 0) >=\n                    Number(loan.principal || 0) + Number(loan.interest || 0)\n            )\n            .reduce((sum, loan) => sum + Number(loan.interest || 0), 0);\n\n        const totalExpectedProfit = loansThisMonth.reduce(\n          (sum, loan) => sum + Number(loan.interest || 0),\n          0\n        );\n        \n        // --- FIX: Partner Dividends is now 100% of the totalExpectedProfit\n        const totalPartnerDividends = totalExpectedProfit;\n\n        // --- FIX: Individual partner dividends are now also based on the new total\n        const individualPartnerDividends = [\n            { name: \"Agnes Ilukena\", amount: totalExpectedProfit / 2 },\n            { name: \"Jones Ilukena\", amount: totalExpectedProfit / 2 },\n        ];\n\n        const initialCapital = Number(settings?.initialCapital) || 60000;\n        const availableCapital = initialCapital - totalDisbursed + totalCollected;\n        const totalLoansCount = loansThisMonth.length;\n        const paidLoansCount = loansThisMonth.filter((l) => calcStatus(l) === \"Paid\").length;\n        const activeLoansCount = loansThisMonth.filter((l) => calcStatus(l) === \"Active\").length;\n        const overdueLoansCount = loansThisMonth.filter((l) => calcStatus(l) === \"Overdue\").length;\n\n        const totalOutstanding = loansThisMonth\n          .filter((loan) => calcStatus(loan) === \"Active\" || calcStatus(loan) === \"Overdue\")\n          .reduce(\n            (sum, loan) =>\n              sum +\n              (Number(loan.principal || 0) +\n                Number(loan.interest || 0) -\n                Number(loan.repaidAmount || 0)),\n            0\n          );\n        \n        const averageLoan = totalLoansCount > 0 ? Math.round(totalDisbursed / totalLoansCount) : 0;\n\n        const disbursedTrend = getTrendPercentage(totalDisbursed, totalDisbursedLastMonth);\n        const collectedTrend = getTrendPercentage(totalCollected, totalCollectedLastMonth);\n\n        const defaultCards = [\n          {\n            id: \"investedCapital\",\n            label: \"Invested Capital\",\n            value: `K ${initialCapital.toLocaleString()}`,\n            color: \"primary\",\n            filter: \"all\",\n            tooltip: \"Initial capital invested into loans\",\n            progress: null,\n            icon: iconMap.investedCapital,\n          },\n          {\n            id: \"availableCapital\",\n            label: \"Available Capital\",\n            value: `K ${availableCapital.toLocaleString()}`,\n            color: \"success\",\n            filter: \"all\",\n            tooltip: \"Capital currently available to issue new loans. Progress against initial capital.\",\n            progress: initialCapital > 0 ? availableCapital / initialCapital : 0,\n            icon: iconMap.availableCapital,\n          },\n          {\n            id: \"totalDisbursed\",\n            label: \"Total Disbursed\",\n            value: `K ${totalDisbursed.toLocaleString()}`,\n            color: \"primary\",\n            filter: \"all\",\n            tooltip: \"Total principal amount disbursed this month\",\n            progress: null,\n            icon: iconMap.totalDisbursed,\n            trend: disbursedTrend,\n          },\n          {\n            id: \"totalCollected\",\n            label: \"Total Collected\",\n            value: `K ${totalCollected.toLocaleString()}`,\n            color: \"info\",\n            filter: \"paid\",\n            tooltip: \"Total amount collected from repayments this month\",\n            progress: totalDisbursed > 0 ? totalCollected / totalDisbursed : null,\n            icon: iconMap.totalCollected,\n            trend: collectedTrend,\n          },\n          {\n            id: \"partnerDividends\",\n            label: \"Partner Dividends\",\n            value: `K ${totalPartnerDividends.toLocaleString()}`,\n            color: \"secondary\",\n            filter: \"paid\",\n            tooltip: (\n              <Box>\n                  <Typography variant=\"body2\" fontWeight=\"bold\">\n                      {/* FIX: Updated tooltip to reflect new calculation */}\n                      Total Dividends (100% of Expected Profit)\n                  </Typography>\n                  <Typography variant=\"caption\" display=\"block\" mb={1}>\n                      Expected Profit this month: K {totalExpectedProfit.toLocaleString()}\n                  </Typography>\n                  {individualPartnerDividends.map((p) => (\n                      <Typography key={p.name} variant=\"caption\" display=\"block\">\n                          {`${p.name}: K ${p.amount.toLocaleString()}`}\n                      </Typography>\n                  ))}\n              </Box>\n            ),\n            // --- FIX: Removed the progress bar\n            progress: null,\n            icon: iconMap.partnerDividends,\n          },\n          {\n            id: \"totalLoans\",\n            label: \"Total Loans\",\n            value: totalLoansCount,\n            color: \"primary\",\n            filter: \"all\",\n            tooltip: \"Total number of loans issued this month\",\n            progress: null,\n            icon: iconMap.totalLoans,\n          },\n          {\n            id: \"paidLoans\",\n            label: \"Paid Loans\",\n            value: paidLoansCount,\n            color: \"success\",\n            filter: \"paid\",\n            tooltip: \"Loans fully paid back this month\",\n            progress: totalLoansCount ? paidLoansCount / totalLoansCount : 0,\n            icon: iconMap.paidLoans,\n          },\n          {\n            id: \"activeLoans\",\n            label: \"Active Loans\",\n            value: activeLoansCount,\n            color: \"info\",\n            filter: \"active\",\n            tooltip: \"Loans currently active and being repaid\",\n            progress: totalLoansCount ? activeLoansCount / totalLoansCount : 0,\n            icon: iconMap.activeLoans,\n          },\n          {\n            id: \"overdueLoans\",\n            label: \"Overdue Loans\",\n            value: overdueLoansCount,\n            color: \"error\",\n            filter: \"overdue\",\n            tooltip: \"Loans overdue for repayment\",\n            progress: totalLoansCount ? overdueLoansCount / totalLoansCount : 0,\n            icon: iconMap.overdueLoans(overdueLoansCount),\n            pulse: overdueLoansCount > 0,\n          },\n          {\n            id: \"totalOutstanding\",\n            label: \"Total Outstanding\",\n            value: `K ${totalOutstanding.toLocaleString()}`,\n            color: \"warning\",\n            filter: \"active\",\n            tooltip: \"Total outstanding repayments still due\",\n            progress: null,\n            icon: iconMap.totalOutstanding,\n          },\n          {\n            id: \"expectedProfit\",\n            label: \"Interest Expected\",\n            value: `K ${totalExpectedProfit.toLocaleString()}`,\n            color: \"secondary\",\n            filter: \"all\",\n            tooltip: \"Total expected profit from interest\",\n            progress: null,\n            icon: iconMap.expectedProfit,\n          },\n          {\n            id: \"actualProfit\",\n            label: \"Actual Interest\",\n            value: `K ${actualProfit.toLocaleString()}`,\n            color: \"success\",\n            filter: \"paid\",\n            tooltip: \"Profit earned from fully repaid loans\",\n            progress: totalExpectedProfit > 0 ? actualProfit / totalExpectedProfit : null,\n            icon: iconMap.actualProfit,\n          },\n          {\n            id: \"averageLoan\",\n            label: \"Average Loan\",\n            value: `K ${averageLoan.toLocaleString()}`,\n            color: \"primary\",\n            filter: \"all\",\n            tooltip: \"Average loan amount issued this month\",\n            progress: null,\n            icon: iconMap.averageLoan,\n          },\n        ];\n\n        return { loansForCalculations, defaultCards };\n      }, [loans, selectedMonth, settings, iconMap]);\n\n    return { loansForCalculations, defaultCards };\n};\n\n","\nimport React from \"react\";\nimport {\n  Grid,\n  Card,\n  Typography,\n  Box,\n  Tooltip,\n  LinearProgress,\n  useTheme,\n} from \"@mui/material\";\nimport { motion } from \"framer-motion\";\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\nimport ArrowDownwardIcon from \"@mui/icons-material/ArrowDownward\";\nimport DragIndicatorIcon from \"@mui/icons-material/DragIndicator\";\n\nconst cardVariants = {\n  hidden: { opacity: 0, y: 20 },\n  visible: (i) => ({\n    opacity: 1,\n    y: 0,\n    transition: { delay: i * 0.1, duration: 0.4, ease: \"easeOut\" },\n  }),\n};\n\nconst DashboardCard = ({\n  card,\n  index,\n  isMobile,\n  handleCardClick,\n  provided,\n  snapshot,\n}) => {\n  const theme = useTheme();\n\n  return (\n    <Grid\n      item\n      xs={isMobile ? 4 : 6}\n      sm={6}\n      md={4}\n      lg={3}\n      ref={provided.innerRef}\n      {...provided.draggableProps}\n      {...(!isMobile && provided.dragHandleProps)}\n      style={{\n        ...provided.draggableProps.style,\n        userSelect: snapshot.isDragging ? \"none\" : \"auto\",\n      }}\n    >\n      <Tooltip title={card.tooltip} arrow placement=\"top\">\n        <motion.div\n          variants={cardVariants}\n          initial=\"hidden\"\n          animate=\"visible\"\n          custom={index}\n          whileHover={{ scale: 1.02 }}\n          whileTap={{ scale: 0.98 }}\n          onClick={() => handleCardClick(card.filter)}\n          style={{ height: \"100%\" }}\n        >\n          <Card\n            sx={{\n              p: isMobile ? 1.5 : 2,\n              borderRadius: 3,\n              height: \"100%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              textAlign: \"center\",\n              backgroundColor: theme.palette.background.paper,\n              boxShadow: theme.shadows[1],\n              border: `1px solid ${theme.palette.divider}`,\n              transition: \"box-shadow 0.3s ease-in-out, border-color 0.3s ease-in-out\",\n              \"&:hover\": {\n                boxShadow: theme.shadows[4],\n                cursor: \"pointer\",\n                borderColor: theme.palette[card.color]?.main || theme.palette.primary.main,\n              },\n              ...(card.pulse && { animation: \"pulse 1.5s infinite\" }),\n              position: \"relative\",\n            }}\n          >\n            {isMobile && (\n              <Box\n                {...provided.dragHandleProps}\n                sx={{\n                  position: \"absolute\",\n                  top: 4,\n                  right: 4,\n                  cursor: \"grab\",\n                  color: theme.palette.grey[500],\n                  zIndex: 1,\n                }}\n              >\n                <DragIndicatorIcon fontSize=\"small\" />\n              </Box>\n            )}\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              mb={0.5}\n              gap={0.5}\n            >\n              <Box sx={{ color: theme.palette[card.color]?.main || theme.palette.text.primary }}>\n                {typeof card.icon === \"function\" ? card.icon(card.value) : card.icon}\n              </Box>\n              <Typography\n                variant=\"caption\"\n                sx={{ color: theme.palette.text.secondary, fontWeight: 500, fontSize: isMobile ? \"0.6rem\" : \"0.75rem\" }}\n              >\n                {card.label}\n              </Typography>\n            </Box>\n            <Box\n              sx={{\n                flexGrow: 1,\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Typography\n                variant=\"h6\"\n                sx={{\n                  fontWeight: 800,\n                  lineHeight: 1.1,\n                  whiteSpace: \"nowrap\",\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\",\n                  fontSize: isMobile ? \"1.2rem\" : \"1.8rem\",\n                }}\n              >\n                {card.value}\n              </Typography>\n            </Box>\n            {card.progress !== null && (\n              <LinearProgress\n                variant=\"determinate\"\n                value={card.progress * 100}\n                sx={{\n                  height: 5,\n                  borderRadius: 2,\n                  backgroundColor: theme.palette.grey[300],\n                  \"& .MuiLinearProgress-bar\": {\n                    backgroundColor: theme.palette[card.color]?.main || theme.palette.primary.main,\n                  },\n                  width: \"80%\",\n                  mt: 0.5,\n                  mb: 0.5,\n                }}\n              />\n            )}\n            {card.trend && (\n              <Box display=\"flex\" alignItems=\"center\" gap={0.5} mt={0.5}>\n                {card.trend.startsWith(\"+\") ? (\n                  <ArrowUpwardIcon fontSize=\"small\" sx={{ color: theme.palette.success.main }} />\n                ) : (\n                  <ArrowDownwardIcon fontSize=\"small\" sx={{ color: theme.palette.error.main }} />\n                )}\n                <Typography\n                  variant=\"caption\"\n                  sx={{\n                    color: card.trend.startsWith(\"+\")\n                      ? theme.palette.success.main\n                      : theme.palette.error.main,\n                    fontWeight: 600,\n                  }}\n                >\n                  {card.trend} vs. last month\n                </Typography>\n              </Box>\n            )}\n          </Card>\n        </motion.div>\n      </Tooltip>\n    </Grid>\n  );\n};\n\nexport default DashboardCard;\n","\nimport React from \"react\";\nimport {\n  Grid,\n} from \"@mui/material\";\nimport { Droppable, Draggable } from \"@hello-pangea/dnd\";\nimport DashboardCard from \"./DashboardCard\";\n\nconst DashboardSection = ({ cards, droppableId, isMobile, handleCardClick }) => {\n  return (\n    <Droppable droppableId={droppableId} direction=\"horizontal\">\n      {(provided) => (\n        <Grid\n          container\n          spacing={isMobile ? 1.5 : 2}\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n        >\n          {cards.map((card, index) => (\n            <Draggable key={card.id} draggableId={card.id} index={index}>\n              {(provided, snapshot) => (\n                <DashboardCard\n                  card={card}\n                  index={index}\n                  isMobile={isMobile}\n                  handleCardClick={handleCardClick}\n                  provided={provided}\n                  snapshot={snapshot}\n                />\n              )}\n            </Draggable>\n          ))}\n          {provided.placeholder}\n        </Grid>\n      )}\n    </Droppable>\n  );\n};\n\nexport default DashboardSection;\n","import React, { useState, useEffect, useCallback, lazy, Suspense, useMemo } from \"react\";\nimport {\n    Box,\n    Typography,\n    useTheme,\n    useMediaQuery,\n    TextField,\n    Fab,\n    Zoom,\n    Backdrop,\n    CircularProgress,\n    Tabs,\n    Tab,\n} from \"@mui/material\";\nimport { keyframes } from \"@mui/system\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useFirestore } from \"../contexts/FirestoreProvider\";\nimport { useAuth } from \"../contexts/AuthProvider.js\";\nimport dayjs from \"dayjs\"; // <-- Add this import\nimport { toast } from \"react-toastify\"; // <-- Add this import\nimport { DragDropContext } from \"@hello-pangea/dnd\";\nimport { BOTTOM_NAV_HEIGHT } from \"../components/BottomNavBar\";\nimport { useDashboardCalculations } from \"../hooks/dashboard/useDashboardCalculations\";\nimport DashboardSection from \"../components/dashboard/DashboardSection\";\n\nconst LazyCharts = lazy(() => import(\"../components/Charts\"));\n\nconst STORAGE_KEY = \"dashboardCardOrder\";\n\nconst DEFAULT_CARD_IDS = [\n    \"investedCapital\",\n    \"availableCapital\",\n    \"totalDisbursed\",\n    \"totalCollected\",\n    \"partnerDividends\",\n    \"totalLoans\",\n    \"paidLoans\",\n    \"activeLoans\",\n    \"overdueLoans\",\n    \"totalOutstanding\",\n    \"expectedProfit\",\n    \"actualProfit\",\n];\nconst EXECUTIVE_SUMMARY_IDS = [\n    \"investedCapital\",\n    \"availableCapital\",\n    \"totalDisbursed\",\n    \"totalCollected\",\n    \"partnerDividends\",\n];\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: { xs: 2, md: 3 } }}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n}\n\nconst popInAnimation = keyframes`\n  0% {\n    opacity: 0;\n    transform: scale(0.9) translateY(10px);\n  }\n  75% {\n    opacity: 1;\n    transform: scale(1.05) translateY(-5px);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1) translateY(0);\n  }\n`;\n\nexport default function Dashboard() {\n    const navigate = useNavigate();\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n    const { loans, settings, loading } = useFirestore(); \n    const { currentUser } = useAuth();\n\n    const [selectedMonth, setSelectedMonth] = useState(dayjs().format(\"YYYY-MM\"));\n    const [cardsOrder, setCardsOrder] = useState([]);\n    const [activeTab, setActiveTab] = useState(0);\n    const [showWelcome, setShowWelcome] = useState(true);\n\n    const { loansForCalculations, defaultCards } = useDashboardCalculations(\n        loans,\n        selectedMonth,\n        settings,\n        isMobile\n    );\n\n    useEffect(() => {\n        if (currentUser) {\n            const timer = setTimeout(() => {\n                setShowWelcome(false);\n            }, 10000);\n\n            return () => clearTimeout(timer);\n        }\n    }, [currentUser]);\n\n    useEffect(() => {\n        if (loans) {\n            const savedOrder = localStorage.getItem(STORAGE_KEY);\n            try {\n                const parsedOrder = savedOrder ? JSON.parse(savedOrder) : [];\n                const validOrder = parsedOrder.filter((id) =>\n                    DEFAULT_CARD_IDS.includes(id)\n                );\n                const finalOrder = [...new Set([...validOrder, ...DEFAULT_CARD_IDS])];\n                setCardsOrder(finalOrder);\n            } catch (error) {\n                console.error(\"Error parsing saved card order from localStorage:\", error);\n                setCardsOrder(DEFAULT_CARD_IDS);\n            }\n        }\n    }, [loans]);\n\n    const handleTabChange = (event, newValue) => {\n        setActiveTab(newValue);\n    };\n\n    const cardsToRender = useMemo(\n        () =>\n            cardsOrder.length\n                ? cardsOrder.map((id) => defaultCards.find((c) => c.id === id)).filter(Boolean)\n                : defaultCards,\n        [cardsOrder, defaultCards]\n    );\n\n    const executiveSummaryCards = cardsToRender.filter((card) =>\n        EXECUTIVE_SUMMARY_IDS.includes(card.id)\n    );\n    const metricsCards = cardsToRender.filter(\n        (card) => !EXECUTIVE_SUMMARY_IDS.includes(card.id)\n    );\n\n    const onDragEnd = useCallback(\n        (result) => {\n            const { source, destination } = result;\n            if (!destination || source.droppableId !== destination.droppableId) {\n                toast.error(\"Cards can only be reordered within their own section.\");\n                return;\n            }\n\n            let reorderedCards;\n            let newCardsOrder;\n\n            if (source.droppableId === \"executive-summary-droppable\") {\n                reorderedCards = Array.from(executiveSummaryCards);\n                const [removed] = reorderedCards.splice(source.index, 1);\n                reorderedCards.splice(destination.index, 0, removed);\n                const metricsSectionIds = metricsCards.map((c) => c.id);\n                newCardsOrder = [...reorderedCards.map((c) => c.id), ...metricsSectionIds];\n            } else {\n                reorderedCards = Array.from(metricsCards);\n                const [removed] = reorderedCards.splice(source.index, 1);\n                reorderedCards.splice(destination.index, 0, removed);\n                const executiveSectionIds = executiveSummaryCards.map((c) => c.id);\n                newCardsOrder = [...executiveSectionIds, ...reorderedCards.map((c) => c.id)];\n            }\n\n            setCardsOrder(newCardsOrder);\n            localStorage.setItem(STORAGE_KEY, JSON.stringify(newCardsOrder));\n            toast.success(\"Dashboard layout saved!\");\n        },\n        [executiveSummaryCards, metricsCards]\n    );\n\n    const handleCardClick = (filter) => {\n        const params = new URLSearchParams();\n        if (filter !== \"all\") params.set(\"filter\", filter);\n        if (selectedMonth) params.set(\"month\", selectedMonth);\n        navigate(`/loans?${params.toString()}`);\n    };\n\n    if (loading) {\n        return (\n            <Backdrop\n                sx={{\n                    color: \"#fff\",\n                    zIndex: (theme) => theme.zIndex.drawer + 1,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    backgroundColor: theme.palette.background.default,\n                }}\n                open={loading}\n            >\n                <CircularProgress color=\"primary\" />\n                <Typography variant=\"h6\" sx={{ mt: 2, color: theme.palette.text.primary }}>\n                    Loading dashboard...\n                </Typography>\n            </Backdrop>\n        );\n    }\n\n    const userName = currentUser?.displayName || currentUser?.email;\n\n    return (\n        <Box\n            sx={{\n                minHeight: \"100vh\",\n                background: theme.palette.background.default,\n                p: { xs: 2, md: 3 },\n                pb: isMobile ? `calc(${BOTTOM_NAV_HEIGHT}px + ${theme.spacing(2)})` : 3,\n            }}\n        >\n            {userName && showWelcome && (\n                <Box\n                    sx={{\n                        animation: `${popInAnimation} 0.5s ease-out forwards`,\n                        mb: 1,\n                    }}\n                >\n                    <Typography\n                        variant=\"h5\"\n                        sx={{\n                            color: theme.palette.text.secondary,\n                            fontWeight: 600,\n                        }}\n                    >\n                        Welcome back, {userName}!\n                    </Typography>\n                </Box>\n            )}\n            <Typography variant=\"h5\" gutterBottom sx={{ fontWeight: 600, mb: 0.5, fontSize: { xs: \"1.5rem\", md: \"2rem\" } }}>\n                Dashboard\n            </Typography>\n            <Box mb={isMobile ? 1.5 : 2} maxWidth={isMobile ? \"100%\" : 200}>\n                <TextField\n                    label=\"Select Month\"\n                    type=\"month\"\n                    value={selectedMonth}\n                    onChange={(e) => setSelectedMonth(e.target.value)}\n                    size=\"small\"\n                    fullWidth\n                    InputLabelProps={{ shrink: true }}\n                    sx={{\n                        \"& .MuiOutlinedInput-root\": {\n                            borderRadius: 2,\n                            backgroundColor: theme.palette.background.paper,\n                            \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n                                borderColor: theme.palette.secondary.main,\n                            },\n                        },\n                        \"& .MuiInputBase-input\": {\n                            padding: isMobile ? \"10px 14px\" : \"12px 16px\",\n                        },\n                        \"& .MuiInputLabel-root\": {\n                            transform: isMobile ? \"translate(14px, 10px) scale(0.75)\" : \"translate(14px, 12px) scale(0.75)\",\n                        },\n                        \"& .MuiInputLabel-root.Mui-focused\": {\n                            color: theme.palette.secondary.main,\n                        },\n                        \"& .MuiInputLabel-shrink\": {\n                            transform: \"translate(14px, -9px) scale(0.75)\",\n                        },\n                    }}\n                />\n            </Box>\n\n            <Box\n                sx={{\n                    width: \"100%\",\n                    boxShadow: theme.shadows[3],\n                    borderRadius: 4,\n                }}\n            >\n                <Box sx={{\n                    backgroundColor: theme.palette.background.paper,\n                    borderRadius: 4,\n                    display: 'flex',\n                    alignItems: 'center',\n                    p: { xs: 0.5, sm: 1 },\n                    flexWrap: 'wrap'\n                }}>\n                    <Tabs\n                        value={activeTab}\n                        onChange={handleTabChange}\n                        aria-label=\"dashboard sections tabs\"\n                        variant=\"scrollable\"\n                        scrollButtons=\"auto\"\n                        allowScrollButtonsMobile\n                        sx={{\n                            \"& .MuiTabs-indicator\": {\n                                display: \"none\",\n                            },\n                            \"& .MuiTabs-flexContainer\": {\n                                gap: { xs: 0, sm: 1 },\n                            }\n                        }}\n                    >\n                        <Tab\n                            label=\"Summary\"\n                            {...a11yProps(0)}\n                            sx={{\n                                color: activeTab === 0 ? theme.palette.text.primary : theme.palette.text.secondary,\n                                fontWeight: activeTab === 0 ? 600 : 500,\n                                borderRadius: 999,\n                                backgroundColor: activeTab === 0 ? theme.palette.action.selected : 'transparent',\n                                boxShadow: activeTab === 0 ? theme.shadows[1] : 'none',\n                                textTransform: 'none',\n                                transition: 'all 0.3s ease',\n                                minHeight: 48,\n                                minWidth: 'auto',\n                                px: { xs: 1.5, sm: 2 },\n                                \"&:hover\": {\n                                    backgroundColor: activeTab === 0 ? theme.palette.action.selected : theme.palette.action.hover,\n                                    color: theme.palette.text.primary,\n                                },\n                            }}\n                        />\n                        <Tab\n                            label=\"Metrics\"\n                            {...a11yProps(1)}\n                            sx={{\n                                color: activeTab === 1 ? theme.palette.text.primary : theme.palette.text.secondary,\n                                fontWeight: activeTab === 1 ? 600 : 500,\n                                borderRadius: 999,\n                                backgroundColor: activeTab === 1 ? theme.palette.action.selected : 'transparent',\n                                boxShadow: activeTab === 1 ? theme.shadows[1] : 'none',\n                                textTransform: 'none',\n                                transition: 'all 0.3s ease',\n                                minHeight: 48,\n                                minWidth: 'auto',\n                                px: { xs: 1.5, sm: 2 },\n                                \"&:hover\": {\n                                    backgroundColor: activeTab === 1 ? theme.palette.action.selected : theme.palette.action.hover,\n                                    color: theme.palette.text.primary,\n                                },\n                            }}\n                        />\n                        <Tab\n                            label=\"Charts\"\n                            {...a11yProps(2)}\n                            sx={{\n                                color: activeTab === 2 ? theme.palette.text.primary : theme.palette.text.secondary,\n                                fontWeight: activeTab === 2 ? 600 : 500,\n                                borderRadius: 999,\n                                backgroundColor: activeTab === 2 ? theme.palette.action.selected : 'transparent',\n                                boxShadow: activeTab === 2 ? theme.shadows[1] : 'none',\n                                textTransform: 'none',\n                                transition: 'all 0.3s ease',\n                                minHeight: 48,\n                                minWidth: 'auto',\n                                px: { xs: 1.5, sm: 2 },\n                                \"&:hover\": {\n                                    backgroundColor: activeTab === 2 ? theme.palette.action.selected : theme.palette.action.hover,\n                                    color: theme.palette.text.primary,\n                                },\n                            }}\n                        />\n                    </Tabs>\n                </Box>\n                <DragDropContext onDragEnd={onDragEnd}>\n                    <TabPanel value={activeTab} index={0}>\n                        <DashboardSection\n                            cards={executiveSummaryCards}\n                            droppableId=\"executive-summary-droppable\"\n                            isMobile={isMobile}\n                            handleCardClick={handleCardClick}\n                        />\n                    </TabPanel>\n                    <TabPanel value={activeTab} index={1}>\n                        <DashboardSection\n                            cards={metricsCards}\n                            droppableId=\"metrics-droppable\"\n                            isMobile={isMobile}\n                            handleCardClick={handleCardClick}\n                        />\n                    </TabPanel>\n                </DragDropContext>\n                <TabPanel value={activeTab} index={2}>\n                    <Suspense\n                        fallback={\n                            <Box sx={{ display: \"flex\", justifyContent: \"center\", p: 2 }}>\n                                <CircularProgress color=\"primary\" />\n                            </Box>\n                        }\n                    >\n                        {loansForCalculations.length > 0 ? (\n                            <LazyCharts loans={loansForCalculations} selectedMonth={selectedMonth} />\n                        ) : (\n                            <Typography variant=\"body2\" color=\"text.secondary\">\n                                No loan data available for charts.\n                            </Typography>\n                        )}\n                    </Suspense>\n                </TabPanel>\n            </Box>\n\n            <Zoom\n                in\n                style={{\n                    position: \"fixed\",\n                    bottom: isMobile ? `calc(${BOTTOM_NAV_HEIGHT}px + 16px)` : 16,\n                    right: 16,\n                }}\n                timeout={500}\n                unmountOnExit\n            >\n                <Fab\n                    color=\"secondary\"\n                    aria-label=\"add loan\"\n                    onClick={() => navigate(\"/add-loan\")}\n                >\n                    <AddIcon />\n                </Fab>\n            </Zoom>\n        </Box>\n    );\n}\n"],"names":["calcStatus","loan","totalRepayable","Number","repaidAmount","now","dayjs","dueDate","isBefore","getTrendPercentage","current","previous","change","concat","toFixed","useDashboardCalculations","loans","selectedMonth","settings","isMobile","iconMap","useMemo","iconSize","fontSize","totalLoans","_jsx","MonetizationOnIcon","sx","paidLoans","CheckCircleIcon","activeLoans","PendingIcon","overdueLoans","overdueCount","Badge","badgeContent","color","overlap","anchorOrigin","vertical","horizontal","height","minWidth","padding","children","WarningIcon","totalDisbursed","investedCapital","AccountBalanceWalletIcon","availableCapital","totalCollected","PaidIcon","totalOutstanding","expectedProfit","BarChartIcon","actualProfit","averageLoan","partnerDividends","AccountBalanceIcon","loansForCalculations","defaultCards","loansThisMonth","filter","startDate","startsWith","previousMonth","subtract","format","loansLastMonth","reduce","sum","principal","totalDisbursedLastMonth","totalCollectedLastMonth","interest","totalExpectedProfit","totalPartnerDividends","individualPartnerDividends","name","amount","initialCapital","totalLoansCount","length","paidLoansCount","l","activeLoansCount","overdueLoansCount","Math","round","disbursedTrend","collectedTrend","id","label","value","toLocaleString","tooltip","progress","icon","trend","_jsxs","Box","Typography","variant","fontWeight","display","mb","map","p","pulse","cardVariants","hidden","opacity","y","visible","i","transition","delay","duration","ease","_ref","_theme$palette$card$c","_theme$palette$card$c2","_theme$palette$card$c3","card","index","handleCardClick","provided","snapshot","theme","useTheme","Grid","_objectSpread","item","xs","sm","md","lg","ref","innerRef","draggableProps","dragHandleProps","style","userSelect","isDragging","Tooltip","title","arrow","placement","motion","div","variants","initial","animate","custom","whileHover","scale","whileTap","onClick","Card","borderRadius","flexDirection","alignItems","textAlign","backgroundColor","palette","background","paper","boxShadow","shadows","border","divider","cursor","borderColor","main","primary","animation","position","top","right","grey","zIndex","DragIndicatorIcon","justifyContent","gap","text","secondary","flexGrow","lineHeight","whiteSpace","overflow","textOverflow","LinearProgress","width","mt","ArrowUpwardIcon","success","ArrowDownwardIcon","error","cards","droppableId","Droppable","direction","container","spacing","droppableProps","Draggable","draggableId","DashboardCard","placeholder","LazyCharts","lazy","STORAGE_KEY","DEFAULT_CARD_IDS","EXECUTIVE_SUMMARY_IDS","TabPanel","props","other","_objectWithoutProperties","_excluded","role","a11yProps","popInAnimation","keyframes","_templateObject","_taggedTemplateLiteral","Dashboard","navigate","useNavigate","useMediaQuery","breakpoints","down","loading","useFirestore","currentUser","useAuth","setSelectedMonth","useState","cardsOrder","setCardsOrder","activeTab","setActiveTab","showWelcome","setShowWelcome","useEffect","timer","setTimeout","clearTimeout","savedOrder","localStorage","getItem","validOrder","JSON","parse","includes","finalOrder","Set","console","cardsToRender","find","c","Boolean","executiveSummaryCards","metricsCards","onDragEnd","useCallback","result","source","destination","toast","reorderedCards","newCardsOrder","Array","from","removed","splice","metricsSectionIds","setItem","stringify","params","URLSearchParams","set","toString","Backdrop","drawer","default","open","CircularProgress","userName","displayName","email","minHeight","pb","BOTTOM_NAV_HEIGHT","gutterBottom","maxWidth","TextField","type","onChange","e","target","size","fullWidth","InputLabelProps","shrink","transform","flexWrap","Tabs","handleTabChange","event","newValue","scrollButtons","allowScrollButtonsMobile","Tab","action","selected","textTransform","px","hover","DragDropContext","DashboardSection","Suspense","fallback","Zoom","in","bottom","timeout","unmountOnExit","Fab","AddIcon"],"sourceRoot":""}