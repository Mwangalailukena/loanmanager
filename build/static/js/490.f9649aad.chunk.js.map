{"version":3,"file":"static/js/490.f9649aad.chunk.js","mappings":"gSAee,SAASA,IACtB,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,KACfC,GAAWC,EAAAA,EAAAA,OAEVC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,KAClCK,EAAiBC,IAAsBN,EAAAA,EAAAA,UAAS,KAChDO,EAAOC,IAAYR,EAAAA,EAAAA,UAAS,KAC5BS,EAASC,IAAcV,EAAAA,EAAAA,WAAS,GAyBvC,OACEW,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFC,OAAO,QACPC,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXC,QAAQ,UACRC,EAAG,EAAEC,UAELC,EAAAA,EAAAA,MAACR,EAAAA,EAAG,CAACS,SAAU,IAAKC,MAAM,OAAOL,QAAQ,QAAQC,EAAG,EAAGK,aAAc,EAAGC,UAAW,EAAEL,SAAA,EACnFR,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,QAAQ,KAAKC,GAAI,EAAGC,MAAM,UAAUC,MAAM,SAAQV,SAAC,aAI9DZ,IACCI,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CAACC,SAAS,QAAQC,GAAI,CAAEL,GAAI,GAAIR,SACnCZ,KAILI,EAAAA,EAAAA,KAAA,QAAMsB,SA3CWC,UAIrB,GAHAC,EAAEC,iBACF5B,EAAS,IAELL,IAAaE,EACf,OAAOG,EAAS,2BAGlBE,GAAW,GAEX,UAEQhB,EAASI,EAAMG,EAAOE,GAC5BP,EAAS,aACX,CAAE,MAAOyC,GAEP7B,EAAS6B,EAAIC,SAAW,kDACxBC,QAAQhC,MAAM,sBAAuB8B,EACvC,CAAC,QACC3B,GAAW,EACb,GAuBmCS,UAC7BC,EAAAA,EAAAA,MAACoB,EAAAA,EAAK,CAACC,QAAS,EAAEtB,SAAA,EAEhBR,EAAAA,EAAAA,KAAC+B,EAAAA,EAAS,CACRC,MAAM,OACNC,KAAK,OACLC,MAAO/C,EACPgD,SAAWX,GAAMpC,EAAQoC,EAAEY,OAAOF,OAClCG,UAAQ,EACRC,WAAS,KAEXtC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAS,CACRC,MAAM,QACNC,KAAK,QACLC,MAAO5C,EACP6C,SAAWX,GAAMjC,EAASiC,EAAEY,OAAOF,OACnCG,UAAQ,EACRC,WAAS,KAEXtC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAS,CACRC,MAAM,WACNC,KAAK,WACLC,MAAO1C,EACP2C,SAAWX,GAAM/B,EAAY+B,EAAEY,OAAOF,OACtCG,UAAQ,EACRC,WAAS,KAEXtC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAS,CACRC,MAAM,mBACNC,KAAK,WACLC,MAAOxC,EACPyC,SAAWX,GAAM7B,EAAmB6B,EAAEY,OAAOF,OAC7CG,UAAQ,EACRC,WAAS,KAGXtC,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,CACLxB,QAAQ,YACRkB,KAAK,SACLK,WAAS,EACTE,SAAU1C,EACVuB,GAAI,CAAEoB,GAAI,GAAIjC,SAEbV,GAAUE,EAAAA,EAAAA,KAAC0C,EAAAA,EAAgB,CAACC,KAAM,GAAI1B,MAAM,YAAe,cAG9DR,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAACC,QAAQ,QAAQG,MAAM,SAASuB,GAAI,EAAEjC,SAAA,CAAC,2BACvB,KACzBR,EAAAA,EAAAA,KAAC4C,EAAAA,EAAI,CAACC,UAAWC,EAAAA,GAAYC,GAAG,SAAQvC,SAAC,sBASvD,C,4MC5HO,SAASwC,EAAoBC,GAClC,OAAOC,EAAAA,EAAAA,IAAqB,UAAWD,EACzC,CACA,MACA,GADoBE,EAAAA,EAAAA,GAAuB,UAAW,CAAC,OAAQ,gBAAiB,iBAAkB,kBAAmB,SAAU,iB,0BCH/H,MAkBA,EAlB0BC,IAGpB,IAHqB,MACzBC,EAAK,WACLC,GACDF,EACC,MAAMG,EAAmBD,EAAWrC,MACpC,GAAI,eAAgBoC,GAASA,EAAMG,WAAY,CAC7C,MAAMvC,GAAQwC,EAAAA,EAAAA,IAAQJ,EAAO,WAAFK,OAAaH,EAAgB,YAAYE,EAAAA,EAAAA,IAAQJ,EAAO,WAAFK,OAAaH,KAAuBD,EAAWrC,MAChI,OAAOoC,EAAMM,MAAM1C,EAAO,GAC5B,CAGA,MAAMA,GAAQwC,EAAAA,EAAAA,IAAQJ,EAAO,WAAFK,OAAaH,EAAgB,UAAS,KAAUE,EAAAA,EAAAA,IAAQJ,EAAO,WAAFK,OAAaH,IAAoB,IAAUD,EAAWrC,MACxI2C,GAAeH,EAAAA,EAAAA,IAAQJ,EAAO,WAAFK,OAAaH,EAAgB,mBAAmBE,EAAAA,EAAAA,IAAQJ,EAAO,WAAFK,OAAaH,EAAgB,YAC5H,MAAI,SAAUF,GAASO,EACd,QAAPF,OAAeE,EAAY,YAEtBD,EAAAA,EAAAA,IAAM1C,EAAO,K,eClBT,MAAA4C,EAAA,oGAiBPC,EAAW,CACfC,SAAS,EACTC,WAAW,EACXpE,OAAO,EACPqE,MAAM,EACNC,SAAS,EACTC,SAAS,EACTC,aAAa,EACbC,eAAe,EACfC,cAAc,GAcVC,GAAWC,EAAAA,EAAAA,IAAO1D,EAAAA,EAAY,CAClC3B,KAAM,UACN8D,KAAM,OACNwB,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJrB,GACEoB,EACJ,MAAO,CAACC,EAAOC,KAAMD,EAAO,YAADjB,QAAamB,EAAAA,EAAAA,GAAWvB,EAAWwB,aAAwC,WAAzBxB,EAAWT,WAA0B8B,EAAOI,UAP5GP,EASdQ,EAAAA,EAAAA,GAAU5B,IAEP,IAFQ,MACZC,GACDD,EACC,MAAO,CACL6B,SAAU,CAAC,CACTP,MAAO,CACLI,UAAW,QAEbI,MAAO,CACLC,eAAgB,SAEjB,CACDT,MAAO,CACLI,UAAW,SAEbI,MAAO,CACLC,eAAgB,OAChB,UAAW,CACTA,eAAgB,eAGnB,CACDT,MAAO,CACLI,UAAW,UAEbI,MAAO,CACLC,eAAgB,YAChB,UAAW,CACTC,oBAAqB,aAGxB,CACDV,MAAOW,IAAA,IAAC,UACNP,EAAS,WACTxB,GACD+B,EAAA,MAAmB,WAAdP,GAA+C,YAArBxB,EAAWrC,OAC3CiE,MAAO,CACLE,oBAAqB,+BAEtB,CACDV,MAAOY,IAAA,IAAC,UACNR,EAAS,WACTxB,GACDgC,EAAA,MAAmB,WAAdR,GAA+C,YAArBxB,EAAWrC,OAC3CiE,MAAO7B,EAAMG,WAAa,CACxB4B,oBAAqB/B,EAAMM,MAAM,eAAgB,KAC/C,SACA4B,OAAOC,QAAQnC,EAAMoC,SAASC,QAAOC,EAAAA,EAAAA,MAAkCC,IAAIC,IAAA,IAAE5E,GAAM4E,EAAA,MAAM,CAC7FnB,MAAO,CACLI,UAAW,SACX7D,SAEFiE,MAAO,CACL,wBAAyB7B,EAAMM,OAAON,EAAMyC,MAAQzC,GAAOoC,QAAQxE,GAAO8E,KAAM,QAE/E,CACHrB,MAAO,CACLI,UAAW,SACX7D,MAAO,eAETiE,MAAO,CACL,wBAAyB7B,EAAMM,OAAON,EAAMyC,MAAQzC,GAAOoC,QAAQO,KAAKjC,QAAS,MAElF,CACDW,MAAO,CACLI,UAAW,SACX7D,MAAO,iBAETiE,MAAO,CACL,wBAAyB7B,EAAMM,OAAON,EAAMyC,MAAQzC,GAAOoC,QAAQO,KAAKhC,UAAW,MAEpF,CACDU,MAAO,CACLI,UAAW,SACX7D,MAAO,gBAETiE,MAAO,CACL,yBAA0B7B,EAAMyC,MAAQzC,GAAOoC,QAAQO,KAAKxD,WAE7D,CACDkC,MAAO,CACL7B,UAAW,UAEbqC,MAAO,CACLe,SAAU,WACVC,wBAAyB,cACzBC,gBAAiB,cAGjBC,QAAS,EACTC,OAAQ,EACRC,OAAQ,EAER1F,aAAc,EACd2F,QAAS,EAETC,OAAQ,UACRC,WAAY,OACZC,cAAe,SACfC,cAAe,OAEfC,iBAAkB,OAElB,sBAAuB,CACrBC,YAAa,QAEf,CAAC,KAADnD,OAAMoD,EAAYC,eAAiB,CACjCX,QAAS,eAqInB,EA/H0BY,EAAAA,WAAiB,SAAcC,EAASC,GAChE,MAAMxC,GAAQyC,EAAAA,EAAAA,GAAgB,CAC5BzC,MAAOuC,EACP9H,KAAM,YAEFkE,GAAQ+D,EAAAA,EAAAA,MACR,UACJC,EAAS,MACTpG,EAAQ,UAAS,UACjB4B,EAAY,IAAG,OACfyE,EAAM,QACNC,EAAO,kBACPC,EAAiB,UACjB1C,EAAY,SAAQ,QACpB/D,EAAU,UAAS,GACnBM,GAEEqD,EADC+C,GAAKC,EAAAA,EAAAA,GACNhD,EAAKb,IACFkD,EAAcY,GAAmBX,EAAAA,UAAe,GAiBjD1D,GAAUsE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXlD,GAAK,IACRzD,QACA4B,YACAkE,eACAjC,YACA/D,YAEI8G,EAjLkBvE,KACxB,MAAM,QACJuE,EAAO,UACPhF,EAAS,aACTkE,EAAY,UACZjC,GACExB,EACEwE,EAAQ,CACZlD,KAAM,CAAC,OAAQ,YAAFlB,QAAcmB,EAAAA,EAAAA,GAAWC,IAA4B,WAAdjC,GAA0B,SAAUkE,GAAgB,iBAE1G,OAAOgB,EAAAA,EAAAA,GAAeD,EAAO9E,EAAqB6E,IAuKlCG,CAAkB1E,GAClC,OAAoBtD,EAAAA,EAAAA,KAAKuE,GAAQqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAC/B3G,MAAOA,EACPoG,WAAWY,EAAAA,EAAAA,GAAKJ,EAAQjD,KAAMyC,GAC9BQ,QAASL,EACT3E,UAAWA,EACXyE,OA9BiBY,KACZC,EAAAA,EAAAA,GAAeD,EAAM9F,SACxBuF,GAAgB,GAEdL,GACFA,EAAOY,IA0BTX,QAvBkBW,KACdC,EAAAA,EAAAA,GAAeD,EAAM9F,SACvBuF,GAAgB,GAEdJ,GACFA,EAAQW,IAmBVhB,IAAKA,EACL5D,WAAYA,EACZvC,QAASA,GACN0G,GAAK,IACRpG,GAAI,SAAyB+G,IAApBtE,EAAS7C,GAAuB,CAAC,CACxCA,UACG,MAASoH,MAAMC,QAAQjH,GAAMA,EAAK,CAACA,IACxC6D,OAAK0C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAH,EAAMvC,OACS,WAAdJ,GAAoC,YAAV7D,IAAwB6C,EAAS7C,IAAU,CACvE,wBAAyBsH,EAAkB,CACzClF,QACAC,mBAKV,E","sources":["pages/Register.jsx","../node_modules/@mui/material/esm/Link/linkClasses.js","../node_modules/@mui/material/esm/Link/getTextDecoration.js","../node_modules/@mui/material/esm/Link/Link.js"],"sourcesContent":["// src/pages/Register.jsx\nimport React, { useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Alert,\n  Stack,\n  Link,\n  CircularProgress, // Import CircularProgress\n} from \"@mui/material\";\nimport { useAuth } from \"../contexts/AuthProvider\";\nimport { useNavigate, Link as RouterLink } from \"react-router-dom\";\n\nexport default function Register() {\n  const { register } = useAuth();\n  const navigate = useNavigate();\n\n  const [name, setName] = useState(\"\"); // New: State for name\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false); // New: State for loading\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n\n    if (password !== passwordConfirm) {\n      return setError(\"Passwords do not match.\");\n    }\n\n    setLoading(true); // Set loading true when registration starts\n\n    try {\n      // Pass the name, email, and password to the register function\n      await register(name, email, password);\n      navigate(\"/dashboard\");\n    } catch (err) {\n      // Improved error message for Firebase Auth errors\n      setError(err.message || \"Failed to create an account. Please try again.\");\n      console.error(\"Registration error:\", err); // Log for debugging\n    } finally {\n      setLoading(false); // Always set loading false\n    }\n  };\n\n  return (\n    <Box\n      height=\"100vh\"\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      bgcolor=\"#e0f2f1\"\n      p={2}\n    >\n      <Box maxWidth={400} width=\"100%\" bgcolor=\"white\" p={4} borderRadius={2} boxShadow={3}>\n        <Typography variant=\"h4\" mb={3} color=\"primary\" align=\"center\">\n          Register\n        </Typography>\n\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n\n        <form onSubmit={handleRegister}>\n          <Stack spacing={2}>\n            {/* New: Name TextField */}\n            <TextField\n              label=\"Name\"\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n              fullWidth\n            />\n            <TextField\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              fullWidth\n            />\n            <TextField\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              fullWidth\n            />\n            <TextField\n              label=\"Confirm Password\"\n              type=\"password\"\n              value={passwordConfirm}\n              onChange={(e) => setPasswordConfirm(e.target.value)}\n              required\n              fullWidth\n            />\n\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              fullWidth\n              disabled={loading} // Disable button when loading\n              sx={{ mt: 2 }}\n            >\n              {loading ? <CircularProgress size={24} color=\"inherit\" /> : \"Register\"}\n            </Button>\n\n            <Typography variant=\"body2\" align=\"center\" mt={2}>\n              Already have an account?{\" \"}\n              <Link component={RouterLink} to=\"/login\">\n                Login\n              </Link>\n            </Typography>\n          </Stack>\n        </form>\n      </Box>\n    </Box>\n  );\n}\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { getPath } from '@mui/system/style';\nimport { alpha } from '@mui/system/colorManipulator';\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = ownerState.color;\n  if ('colorSpace' in theme && theme.colorSpace) {\n    const color = getPath(theme, `palette.${transformedColor}.main`) || getPath(theme, `palette.${transformedColor}`) || ownerState.color;\n    return theme.alpha(color, 0.4);\n  }\n\n  // check the `main` color first for a custom palette, then fallback to the color itself\n  const color = getPath(theme, `palette.${transformedColor}.main`, false) || getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}.mainChannel`) || getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport elementTypeAcceptingRef from '@mui/utils/elementTypeAcceptingRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport isFocusVisible from '@mui/utils/isFocusVisible';\nimport capitalize from \"../utils/capitalize.js\";\nimport { styled, useTheme } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport linkClasses, { getLinkUtilityClass } from \"./linkClasses.js\";\nimport getTextDecoration from \"./getTextDecoration.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst v6Colors = {\n  primary: true,\n  secondary: true,\n  error: true,\n  info: true,\n  success: true,\n  warning: true,\n  textPrimary: true,\n  textSecondary: true,\n  textDisabled: true\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  return {\n    variants: [{\n      props: {\n        underline: 'none'\n      },\n      style: {\n        textDecoration: 'none'\n      }\n    }, {\n      props: {\n        underline: 'hover'\n      },\n      style: {\n        textDecoration: 'none',\n        '&:hover': {\n          textDecoration: 'underline'\n        }\n      }\n    }, {\n      props: {\n        underline: 'always'\n      },\n      style: {\n        textDecoration: 'underline',\n        '&:hover': {\n          textDecorationColor: 'inherit'\n        }\n      }\n    }, {\n      props: ({\n        underline,\n        ownerState\n      }) => underline === 'always' && ownerState.color !== 'inherit',\n      style: {\n        textDecorationColor: 'var(--Link-underlineColor)'\n      }\n    }, {\n      props: ({\n        underline,\n        ownerState\n      }) => underline === 'always' && ownerState.color === 'inherit',\n      style: theme.colorSpace ? {\n        textDecorationColor: theme.alpha('currentColor', 0.4)\n      } : null\n    }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n      props: {\n        underline: 'always',\n        color\n      },\n      style: {\n        '--Link-underlineColor': theme.alpha((theme.vars || theme).palette[color].main, 0.4)\n      }\n    })), {\n      props: {\n        underline: 'always',\n        color: 'textPrimary'\n      },\n      style: {\n        '--Link-underlineColor': theme.alpha((theme.vars || theme).palette.text.primary, 0.4)\n      }\n    }, {\n      props: {\n        underline: 'always',\n        color: 'textSecondary'\n      },\n      style: {\n        '--Link-underlineColor': theme.alpha((theme.vars || theme).palette.text.secondary, 0.4)\n      }\n    }, {\n      props: {\n        underline: 'always',\n        color: 'textDisabled'\n      },\n      style: {\n        '--Link-underlineColor': (theme.vars || theme).palette.text.disabled\n      }\n    }, {\n      props: {\n        component: 'button'\n      },\n      style: {\n        position: 'relative',\n        WebkitTapHighlightColor: 'transparent',\n        backgroundColor: 'transparent',\n        // Reset default value\n        // We disable the focus ring for mouse, touch and keyboard users.\n        outline: 0,\n        border: 0,\n        margin: 0,\n        // Remove the margin in Safari\n        borderRadius: 0,\n        padding: 0,\n        // Remove the padding in Firefox\n        cursor: 'pointer',\n        userSelect: 'none',\n        verticalAlign: 'middle',\n        MozAppearance: 'none',\n        // Reset\n        WebkitAppearance: 'none',\n        // Reset\n        '&::-moz-focus-inner': {\n          borderStyle: 'none' // Remove Firefox dotted outline.\n        },\n        [`&.${linkClasses.focusVisible}`]: {\n          outline: 'auto'\n        }\n      }\n    }]\n  };\n}));\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const theme = useTheme();\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit',\n    sx,\n    ...other\n  } = props;\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handleBlur = event => {\n    if (!isFocusVisible(event.target)) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    if (isFocusVisible(event.target)) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = {\n    ...props,\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, {\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: ref,\n    ownerState: ownerState,\n    variant: variant,\n    ...other,\n    sx: [...(v6Colors[color] === undefined ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])],\n    style: {\n      ...other.style,\n      ...(underline === 'always' && color !== 'inherit' && !v6Colors[color] && {\n        '--Link-underlineColor': getTextDecoration({\n          theme,\n          ownerState\n        })\n      })\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'success', 'error', 'info', 'warning', 'textPrimary', 'textSecondary', 'textDisabled']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](https://mui.com/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"names":["Register","register","useAuth","navigate","useNavigate","name","setName","useState","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","error","setError","loading","setLoading","_jsx","Box","height","display","justifyContent","alignItems","bgcolor","p","children","_jsxs","maxWidth","width","borderRadius","boxShadow","Typography","variant","mb","color","align","Alert","severity","sx","onSubmit","async","e","preventDefault","err","message","console","Stack","spacing","TextField","label","type","value","onChange","target","required","fullWidth","Button","disabled","mt","CircularProgress","size","Link","component","RouterLink","to","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_ref","theme","ownerState","transformedColor","colorSpace","getPath","concat","alpha","channelColor","_excluded","v6Colors","primary","secondary","info","success","warning","textPrimary","textSecondary","textDisabled","LinkRoot","styled","overridesResolver","props","styles","root","capitalize","underline","button","memoTheme","variants","style","textDecoration","textDecorationColor","_ref2","_ref3","Object","entries","palette","filter","createSimplePaletteValueFilter","map","_ref4","vars","main","text","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","React","inProps","ref","useDefaultProps","useTheme","className","onBlur","onFocus","TypographyClasses","other","_objectWithoutProperties","setFocusVisible","_objectSpread","classes","slots","composeClasses","useUtilityClasses","clsx","event","isFocusVisible","undefined","Array","isArray","getTextDecoration"],"sourceRoot":""}