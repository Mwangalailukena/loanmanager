{"version":3,"file":"static/js/808.ad74101b.chunk.js","mappings":"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","sources":["components/Charts.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport {\n  Box,\n  Typography,\n  useTheme,\n  useMediaQuery,\n  CircularProgress,\n  Paper,\n  Grid,\n  IconButton,\n  Tooltip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Slide,\n} from \"@mui/material\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport { ResponsivePie } from \"@nivo/pie\";\nimport { ResponsiveBar } from \"@nivo/bar\";\nimport { ResponsiveLine } from \"@nivo/line\";\nimport dayjs from \"dayjs\";\nimport isBetween from 'dayjs/plugin/isBetween';\nimport PropTypes from 'prop-types';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\n\ndayjs.extend(isBetween);\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst calcStatus = (loan) => {\n  if (loan.repaidAmount >= loan.principal) {\n    return 'Paid';\n  }\n\n  const today = dayjs();\n  if (!loan.repaymentSchedule || loan.repaymentSchedule.length === 0) {\n    return 'Active';\n  }\n\n  const sortedSchedule = [...loan.repaymentSchedule].sort((a, b) => dayjs(a.date).unix() - dayjs(b.date).unix());\n\n  for (const item of sortedSchedule) {\n    const paymentDate = dayjs(item.date);\n    if (paymentDate.isBefore(today, 'day') && item.repaidAmount < item.amount) {\n      return 'Overdue';\n    }\n  }\n\n  return 'Active';\n};\n\nconst getChartTheme = (theme, isMobile) => ({\n  axis: {\n    ticks: { text: { fill: theme.palette.text.secondary, fontSize: isMobile ? 8 : 10, fontFamily: theme.typography.fontFamily } },\n    legend: { text: { fill: theme.palette.text.primary, fontSize: isMobile ? 10 : 14, fontWeight: 500, fontFamily: theme.typography.fontFamily } },\n  },\n  grid: { line: { stroke: theme.palette.divider, strokeDasharray: '2 2' } },\n  tooltip: {\n    container: {\n      background: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      fontSize: 12,\n      borderRadius: 8,\n      boxShadow: theme.shadows[3],\n      padding: '8px 12px',\n    },\n  },\n  legends: { text: { fill: theme.palette.text.primary, fontSize: isMobile ? 10 : 12, fontFamily: theme.typography.fontFamily } },\n});\n\nconst getNivoChartProps = (chartType, isMobile, isDialog, theme, loanStatusColors, nivoColors) => {\n  const commonTheme = getChartTheme(theme, isMobile);\n\n  const getMargin = (isMobile, isDialog) => {\n    if (isDialog) return { top: 40, right: 120, bottom: 80, left: 80 };\n    return isMobile ? { top: 20, right: 10, bottom: 50, left: 35 } : { top: 20, right: 60, bottom: 60, left: 60 };\n  };\n\n  const margin = getMargin(isMobile, isDialog);\n\n  switch (chartType) {\n    case 'line':\n      return {\n        margin,\n        theme: commonTheme,\n        colors: nivoColors,\n        xScale: { type: 'time', format: '%Y-%m-%d', useUTC: false, precision: 'month' },\n        xFormat: \"time:%Y-%m-%d\",\n        yScale: { type: 'linear', min: 0, max: 'auto', stacked: false, reverse: false },\n        yFormat: \" >-,.0f\",\n        axisBottom: {\n          format: '%b %y',\n          tickValues: 'every 3 months',\n          legend: 'Date',\n          legendOffset: isDialog ? 50 : (isMobile ? 40 : 35),\n          legendPosition: 'middle',\n          tickRotation: isMobile && !isDialog ? 45 : 0,\n        },\n        axisLeft: {\n          legend: 'ZMW',\n          legendOffset: isDialog ? -70 : (isMobile ? -35 : -50),\n          legendPosition: 'middle',\n        },\n        pointSize: isDialog ? 8 : 4,\n        pointBorderWidth: isDialog ? 2 : 1,\n        pointBorderColor: { from: 'serieColor' },\n        legends: [\n          {\n            anchor: isDialog ? 'bottom-right' : 'bottom-right',\n            direction: 'column',\n            justify: false,\n            translateX: isDialog ? 100 : 80,\n            translateY: 0,\n            itemsSpacing: 0,\n            itemDirection: 'left-to-right',\n            itemWidth: isDialog ? 100 : 70,\n            itemHeight: isDialog ? 20 : 16,\n            symbolSize: isDialog ? 12 : 8,\n            symbolShape: 'circle',\n            effects: [{ on: 'hover', style: { itemBackground: 'rgba(0, 0, 0, .03)', itemOpacity: 1 } }],\n          },\n        ],\n      };\n    case 'pie':\n      return {\n        margin,\n        theme: commonTheme,\n        innerRadius: 0.5,\n        padAngle: 0.7,\n        cornerRadius: 3,\n        activeOuterRadiusOffset: 8,\n        borderWidth: 1,\n        borderColor: { from: 'color', modifiers: [['darker', 0.2]] },\n        arcLinkLabelsSkipAngle: 10,\n        arcLinkLabelsTextColor: theme.palette.text.primary,\n        arcLinkLabelsThickness: 2,\n        arcLinkLabelsColor: { from: 'color' },\n        arcLabelsSkipAngle: 10,\n        arcLabelsTextColor: { from: 'color', modifiers: [['darker', 2]] },\n        legends: isMobile ? [] : [\n          {\n            anchor: 'bottom',\n            direction: 'row',\n            justify: false,\n            translateX: 0,\n            translateY: isDialog ? 60 : 30,\n            itemsSpacing: isMobile ? 5 : 10,\n            itemWidth: isDialog ? 100 : 70,\n            itemHeight: isDialog ? 20 : 14,\n            itemTextColor: theme.palette.text.primary,\n            symbolSize: isDialog ? 20 : 12,\n            symbolShape: 'circle',\n          },\n        ],\n      };\n    case 'bar':\n      return {\n        margin,\n        theme: commonTheme,\n        padding: 0.3,\n        valueScale: { type: 'linear' },\n        indexScale: { type: 'band', round: true },\n        colors: nivoColors[0],\n        borderColor: { from: 'color', modifiers: [['darker', 1.6]] },\n        axisTop: null,\n        axisRight: null,\n        axisBottom: {\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: isMobile && !isDialog ? 45 : 0,\n          legend: 'Amount Range',\n          legendPosition: 'middle',\n          legendOffset: isDialog ? 50 : (isMobile ? 45 : 35),\n        },\n        axisLeft: {\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'Loans',\n          legendPosition: 'middle',\n          legendOffset: isDialog ? -70 : (isMobile ? -35 : -50),\n        },\n        labelSkipWidth: 12,\n        labelSkipHeight: 12,\n        labelTextColor: { from: 'color', modifiers: [['darker', 1.6]] },\n        legends: [],\n      };\n    case 'stackedBar':\n      return {\n        margin,\n        theme: commonTheme,\n        padding: 0.3,\n        groupMode: \"stacked\",\n        valueScale: { type: 'linear' },\n        indexScale: { type: 'band', round: true },\n        borderColor: { from: 'color', modifiers: [['darker', 1.6]] },\n        axisTop: null,\n        axisRight: null,\n        axisBottom: {\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: isMobile && !isDialog ? 45 : 0,\n          legend: 'Month',\n          legendPosition: 'middle',\n          legendOffset: isDialog ? 50 : (isMobile ? 45 : 35),\n          format: value => dayjs(value).format('MMM YY'),\n        },\n        axisLeft: {\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'Loans',\n          legendPosition: 'middle',\n          legendOffset: isDialog ? -70 : (isMobile ? -35 : -50),\n        },\n        labelSkipWidth: 12,\n        labelSkipHeight: 12,\n        labelTextColor: { from: 'color', modifiers: [['darker', 1.6]] },\n        legends: [\n          {\n            dataFrom: 'keys',\n            anchor: isDialog ? 'bottom-right' : 'bottom-right',\n            direction: 'column',\n            justify: false,\n            translateX: isDialog ? 100 : 80,\n            translateY: 0,\n            itemsSpacing: 2,\n            itemWidth: isDialog ? 90 : 80,\n            itemHeight: isDialog ? 20 : 18,\n            itemDirection: 'left-to-right',\n            itemOpacity: 0.85,\n            symbolSize: isDialog ? 20 : 16,\n            data: ['Active', 'Paid', 'Overdue'].map(id => ({\n              id: id,\n              label: id,\n              color: loanStatusColors[id]\n            })),\n            effects: [{ on: 'hover', style: { itemOpacity: 1 } }]\n          }\n        ]\n      };\n    default:\n      return {};\n  }\n};\n\nconst Charts = ({ loans, selectedMonth }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [currentDisplayMonth, setCurrentDisplayMonth] = useState(selectedMonth);\n\n  // Adjusted height for desktop\n  const chartPaperHeight = isMobile ? 250 : 300;\n  const chartInnerHeight = `calc(${chartPaperHeight}px - ${isMobile ? 55 : 60}px)`;\n\n  const [openDialog, setOpenDialog] = useState(false);\n  const [dialogChartConfig, setDialogChartConfig] = useState(null);\n\n  const loanStatusColors = useMemo(() => ({\n    'Paid': theme.palette.success.main,\n    'Active': theme.palette.primary.main,\n    'Overdue': theme.palette.error.main,\n  }), [theme]);\n\n  const nivoColors = useMemo(() => [\n    theme.palette.primary.main,\n    theme.palette.secondary.main,\n    theme.palette.success.main,\n    theme.palette.info.main,\n    theme.palette.warning.main,\n    theme.palette.error.main,\n  ], [theme]);\n\n  const handlePreviousMonth = () => {\n    const prevMonth = dayjs(currentDisplayMonth).subtract(1, 'month').format('YYYY-MM');\n    setCurrentDisplayMonth(prevMonth);\n  };\n\n  const handleNextMonth = () => {\n    const nextMonth = dayjs(currentDisplayMonth).add(1, 'month').format('YYYY-MM');\n    setCurrentDisplayMonth(nextMonth);\n  };\n\n  const handleOpenDialog = (type, data, title, keys = [], indexBy = null) => {\n    setDialogChartConfig({ type, data, title, keys, indexBy });\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setDialogChartConfig(null);\n  };\n\n  const calculatedLoans = useMemo(() => {\n    if (!loans) return [];\n    return loans.map(loan => ({\n      ...loan,\n      calculatedStatus: calcStatus(loan)\n    }));\n  }, [loans]);\n\n  const latestDataMonth = useMemo(() => {\n    if (!calculatedLoans || calculatedLoans.length === 0) return null;\n    const sortedLoanDates = calculatedLoans\n      .map(loan => dayjs(loan.startDate).startOf('month'))\n      .sort((a, b) => b.diff(a));\n    return sortedLoanDates.length > 0 ? sortedLoanDates[0].format('YYYY-MM') : null;\n  }, [calculatedLoans]);\n\n  useEffect(() => {\n    const initialMonthFormatted = dayjs(selectedMonth).format('YYYY-MM');\n    const hasDataForInitialMonth = calculatedLoans.some(loan =>\n      dayjs(loan.startDate).format('YYYY-MM') === initialMonthFormatted\n    );\n\n    if (hasDataForInitialMonth) {\n      setCurrentDisplayMonth(initialMonthFormatted);\n    } else if (latestDataMonth) {\n      setCurrentDisplayMonth(latestDataMonth);\n    } else {\n      setCurrentDisplayMonth(initialMonthFormatted);\n    }\n  }, [selectedMonth, calculatedLoans, latestDataMonth]);\n\n  const filteredLoansThisMonth = useMemo(() => {\n    if (!calculatedLoans || calculatedLoans.length === 0) return [];\n    return calculatedLoans.filter(loan =>\n      dayjs(loan.startDate).format('YYYY-MM') === currentDisplayMonth\n    );\n  }, [calculatedLoans, currentDisplayMonth]);\n\n  const monthlySummaryData = useMemo(() => {\n    if (!calculatedLoans || calculatedLoans.length === 0) return [];\n    const monthlyMap = new Map();\n    calculatedLoans.forEach(loan => {\n      const monthYear = dayjs(loan.startDate).format('YYYY-MM-DD');\n      if (!monthlyMap.has(monthYear)) {\n        monthlyMap.set(monthYear, { disbursed: 0, collected: 0 });\n      }\n      const data = monthlyMap.get(monthYear);\n      data.disbursed += Number(loan.principal || 0);\n      data.collected += Number(loan.repaidAmount || 0);\n    });\n    const sortedData = Array.from(monthlyMap.entries())\n      .map(([date, values]) => ({ x: date, ...values }))\n      .sort((a, b) => dayjs(a.x).diff(dayjs(b.x)));\n    return [\n      { id: 'Disbursed', data: sortedData.map(d => ({ x: d.x, y: d.disbursed })) },\n      { id: 'Collected', data: sortedData.map(d => ({ x: d.x, y: d.collected })) },\n    ];\n  }, [calculatedLoans]);\n  const hasMonthlySummaryData = useMemo(() => monthlySummaryData.some(series => series.data.length > 0), [monthlySummaryData]);\n\n  const loanStatusData = useMemo(() => {\n    const statusCounts = { 'Active': 0, 'Paid': 0, 'Overdue': 0 };\n\n    if (filteredLoansThisMonth && filteredLoansThisMonth.length > 0) {\n      filteredLoansThisMonth.forEach(loan => {\n        const statusName = loan.calculatedStatus;\n        if (Object.keys(statusCounts).includes(statusName)) {\n          statusCounts[statusName] += 1;\n        }\n      });\n    }\n\n    return Object.keys(statusCounts).map(status => ({\n      id: status,\n      label: status,\n      value: statusCounts[status],\n    }));\n  }, [filteredLoansThisMonth]);\n\n  const loanAmountDistributionData = useMemo(() => {\n    if (!filteredLoansThisMonth || filteredLoansThisMonth.length === 0) return [];\n    const bins = { '0-500': 0, '501-1000': 0, '1001-2000': 0, '2001-5000': 0, '5000+': 0 };\n    filteredLoansThisMonth.forEach(loan => {\n      const principal = Number(loan.principal || 0);\n      if (principal <= 500) bins['0-500']++;\n      else if (principal <= 1000) bins['501-1000']++;\n      else if (principal <= 2000) bins['1001-2000']++;\n      else if (principal <= 5000) bins['2001-5000']++;\n      else bins['5000+']++;\n    });\n    return Object.keys(bins).map(range => ({ range, count: bins[range] }));\n  }, [filteredLoansThisMonth]);\n\n  const loanStatusCountOverTimeData = useMemo(() => {\n    if (!calculatedLoans || calculatedLoans.length === 0) return [];\n    const monthlyStatusMap = new Map();\n    calculatedLoans.forEach(loan => {\n      const monthKey = dayjs(loan.startDate).format('YYYY-MM');\n      if (!monthlyStatusMap.has(monthKey)) {\n        monthlyStatusMap.set(monthKey, { month: monthKey, Active: 0, Paid: 0, Overdue: 0 });\n      }\n      const data = monthlyStatusMap.get(monthKey);\n      const status = loan.calculatedStatus;\n      if (['Active', 'Paid', 'Overdue'].includes(status)) {\n        data[status]++;\n      }\n    });\n    return Array.from(monthlyStatusMap.values()).sort((a, b) => dayjs(a.month).diff(dayjs(b.month)));\n  }, [calculatedLoans]);\n\n  if (loans === undefined || loans === null) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: chartPaperHeight, p: 2 }}>\n        <CircularProgress />\n        <Typography variant=\"body1\" sx={{ ml: 2 }}>Loading loan data...</Typography>\n      </Box>\n    );\n  }\n\n  if (loans.length === 0) {\n    return (\n      <Box sx={{ p: 2, textAlign: 'center', color: theme.palette.text.secondary }}>\n        <Typography variant=\"body1\">No loan data available.</Typography>\n      </Box>\n    );\n  }\n\n  const NoDataMessage = ({ height, message }) => (\n    <Box sx={{ height, display: 'flex', alignItems: 'center', justifyContent: 'center', color: theme.palette.text.secondary, p: 2 }}>\n      <Typography variant=\"body2\" align=\"center\">{message}</Typography>\n    </Box>\n  );\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', gap: 2, mb: 3, pt: 1 }}>\n        <IconButton onClick={handlePreviousMonth} aria-label=\"Previous month\">\n          <ArrowBackIcon />\n        </IconButton>\n        <Typography variant=\"h5\" component=\"h2\" sx={{ fontWeight: 600 }}>\n          {dayjs(currentDisplayMonth).format('MMMM YYYY')} Data\n        </Typography>\n        <IconButton onClick={handleNextMonth} aria-label=\"Next month\">\n          <ArrowForwardIcon />\n        </IconButton>\n      </Box>\n\n      <Grid container spacing={isMobile ? 1.5 : 2}>\n        {/* Chart 1: Monthly Disbursements & Collections (Line Chart) */}\n        <Grid item xs={12} md={6}>\n          <Paper elevation={1} sx={{ p: isMobile ? 1.5 : 2, borderRadius: 2, height: chartPaperHeight, cursor: 'pointer', transition: 'box-shadow 0.3s', '&:hover': { boxShadow: theme.shadows[4] } }}\n            onClick={() => handleOpenDialog('line', monthlySummaryData, 'Monthly Disbursements & Collections')}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: isMobile ? 1 : 2 }}>\n              <Typography variant=\"h6\" sx={{ fontWeight: 600, fontSize: isMobile ? '1rem' : '1.15rem' }}>\n                Monthly Disbursements & Collections\n              </Typography>\n              <Tooltip title=\"Shows the total amount of loans disbursed versus the total amount collected each month across all available data.\">\n                <IconButton size=\"small\" sx={{ ml: 1 }}>\n                  <HelpOutlineIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </Box>\n            {hasMonthlySummaryData ? (\n              <Box sx={{ height: chartInnerHeight }}>\n                <ResponsiveLine\n                  data={monthlySummaryData}\n                  ariaLabel=\"Monthly Disbursements and Collections Line Chart\"\n                  {...getNivoChartProps('line', isMobile, false, theme, null, nivoColors)}\n                />\n              </Box>\n            ) : (\n              <NoDataMessage height={chartInnerHeight} message=\"No data available for this period.\" />\n            )}\n          </Paper>\n        </Grid>\n\n        {/* Chart 2: Loan Status Distribution (Pie Chart) for selected month */}\n        <Grid item xs={12} md={6}>\n          <Paper elevation={1} sx={{ p: isMobile ? 1.5 : 2, borderRadius: 2, height: chartPaperHeight, cursor: 'pointer', transition: 'box-shadow 0.3s', '&:hover': { boxShadow: theme.shadows[4] } }}\n            onClick={() => handleOpenDialog('pie', loanStatusData, 'Loan Status Distribution')}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: isMobile ? 1 : 2 }}>\n              <Typography variant=\"h6\" sx={{ fontWeight: 600, fontSize: isMobile ? '1rem' : '1.15rem' }}>\n                Loan Status Distribution\n              </Typography>\n              <Tooltip title={`Shows the distribution of loan statuses for ${dayjs(currentDisplayMonth).format('MMMM YYYY')}.`}>\n                <IconButton size=\"small\" sx={{ ml: 1 }}>\n                  <HelpOutlineIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </Box>\n            {loanStatusData.length > 0 && loanStatusData.some(d => d.value > 0) ? (\n              <Box sx={{ height: chartInnerHeight }}>\n                <ResponsivePie\n                  data={loanStatusData}\n                  colors={({ id }) => loanStatusColors[id]}\n                  ariaLabel=\"Loan Status Distribution Pie Chart\"\n                  {...getNivoChartProps('pie', isMobile, false, theme, null, null)}\n                />\n              </Box>\n            ) : (\n              <NoDataMessage height={chartInnerHeight} message=\"No loan status data for this period.\" />\n            )}\n          </Paper>\n        </Grid>\n\n        {/* Chart 3: Loan Amount Distribution (Bar Chart) for selected month */}\n        <Grid item xs={12} md={6}>\n          <Paper elevation={1} sx={{ p: isMobile ? 1.5 : 2, borderRadius: 2, height: chartPaperHeight, cursor: 'pointer', transition: 'box-shadow 0.3s', '&:hover': { boxShadow: theme.shadows[4] } }}\n            onClick={() => handleOpenDialog('bar', loanAmountDistributionData, 'Loan Amount Distribution', ['count'], 'range')}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: isMobile ? 1 : 2 }}>\n              <Typography variant=\"h6\" sx={{ fontWeight: 600, fontSize: isMobile ? '1rem' : '1.15rem' }}>\n                Loan Amount Distribution\n              </Typography>\n              <Tooltip title={`Displays the number of loans within different principal amount ranges for ${dayjs(currentDisplayMonth).format('MMMM YYYY')}.`}>\n                <IconButton size=\"small\" sx={{ ml: 1 }}>\n                  <HelpOutlineIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </Box>\n            {loanAmountDistributionData.length > 0 && loanAmountDistributionData.some(d => d.count > 0) ? (\n              <Box sx={{ height: chartInnerHeight }}>\n                <ResponsiveBar\n                  data={loanAmountDistributionData}\n                  keys={['count']}\n                  indexBy=\"range\"\n                  ariaLabel=\"Loan Amount Distribution Bar Chart\"\n                  {...getNivoChartProps('bar', isMobile, false, theme, null, nivoColors)}\n                />\n              </Box>\n            ) : (\n              <NoDataMessage height={chartInnerHeight} message=\"No loan amount data for this period.\" />\n            )}\n          </Paper>\n        </Grid>\n\n        {/* Chart 4: Loan Status Count Over Time (Stacked Bar Chart) */}\n        <Grid item xs={12} md={6}>\n          <Paper elevation={1} sx={{ p: isMobile ? 1.5 : 2, borderRadius: 2, height: chartPaperHeight, cursor: 'pointer', transition: 'box-shadow 0.3s', '&:hover': { boxShadow: theme.shadows[4] } }}\n            onClick={() => handleOpenDialog('stackedBar', loanStatusCountOverTimeData, 'Loan Status Count Over Time', ['Active', 'Paid', 'Overdue'], 'month')}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: isMobile ? 1 : 2 }}>\n              <Typography variant=\"h6\" sx={{ fontWeight: 600, fontSize: isMobile ? '1rem' : '1.15rem' }}>\n                Loan Status Count Over Time\n              </Typography>\n              <Tooltip title=\"Tracks the number of loans in different statuses (Active, Paid, Overdue) for each month across all available data.\">\n                <IconButton size=\"small\" sx={{ ml: 1 }}>\n                  <HelpOutlineIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </Box>\n            {loanStatusCountOverTimeData.length > 0 && loanStatusCountOverTimeData.some(d => d.Active > 0 || d.Paid > 0 || d.Overdue > 0) ? (\n              <Box sx={{ height: chartInnerHeight }}>\n                <ResponsiveBar\n                  data={loanStatusCountOverTimeData}\n                  keys={['Active', 'Paid', 'Overdue']}\n                  indexBy=\"month\"\n                  colors={({ id }) => loanStatusColors[id]}\n                  ariaLabel=\"Loan Status Count Over Time Stacked Bar Chart\"\n                  {...getNivoChartProps('stackedBar', isMobile, false, theme, loanStatusColors, null)}\n                />\n              </Box>\n            ) : (\n              <NoDataMessage height={chartInnerHeight} message=\"No historical loan status data available.\" />\n            )}\n          </Paper>\n        </Grid>\n      </Grid>\n\n      <Dialog\n        open={openDialog}\n        onClose={handleCloseDialog}\n        maxWidth=\"lg\"\n        fullWidth\n        TransitionComponent={Transition}\n        sx={{ '& .MuiDialog-paper': { height: '90vh', maxHeight: '90vh', display: 'flex', flexDirection: 'column', p: isMobile ? 1 : 3 } }}\n      >\n        <DialogTitle sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', pb: 1, pr: 0 }}>\n          <Typography variant=\"h5\" sx={{ fontWeight: 600 }}>\n            {dialogChartConfig?.title}\n          </Typography>\n          <IconButton aria-label=\"close\" onClick={handleCloseDialog}>\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <DialogContent sx={{ flexGrow: 1, p: 0 }}>\n          {dialogChartConfig && dialogChartConfig.type === 'line' && hasMonthlySummaryData && (\n            <Box sx={{ height: '100%' }}>\n              <ResponsiveLine\n                data={dialogChartConfig.data}\n                ariaLabel=\"Monthly Disbursements and Collections Line Chart\"\n                {...getNivoChartProps('line', isMobile, true, theme, null, nivoColors)}\n              />\n            </Box>\n          )}\n          {dialogChartConfig && dialogChartConfig.type === 'pie' && loanStatusData.length > 0 && loanStatusData.some(d => d.value > 0) && (\n            <Box sx={{ height: '100%' }}>\n              <ResponsivePie\n                data={dialogChartConfig.data}\n                colors={({ id }) => loanStatusColors[id]}\n                ariaLabel=\"Loan Status Distribution Pie Chart\"\n                {...getNivoChartProps('pie', isMobile, true, theme, null, null)}\n              />\n            </Box>\n          )}\n          {dialogChartConfig && dialogChartConfig.type === 'bar' && loanAmountDistributionData.length > 0 && loanAmountDistributionData.some(d => d.count > 0) && (\n            <Box sx={{ height: '100%' }}>\n              <ResponsiveBar\n                data={dialogChartConfig.data}\n                keys={dialogChartConfig.keys}\n                indexBy={dialogChartConfig.indexBy}\n                ariaLabel=\"Loan Amount Distribution Bar Chart\"\n                {...getNivoChartProps('bar', isMobile, true, theme, null, nivoColors)}\n              />\n            </Box>\n          )}\n          {dialogChartConfig && dialogChartConfig.type === 'stackedBar' && loanStatusCountOverTimeData.length > 0 && loanStatusCountOverTimeData.some(d => d.Active > 0 || d.Paid > 0 || d.Overdue > 0) && (\n            <Box sx={{ height: '100%' }}>\n              <ResponsiveBar\n                data={dialogChartConfig.data}\n                keys={dialogChartConfig.keys}\n                indexBy={dialogChartConfig.indexBy}\n                colors={({ id }) => loanStatusColors[id]}\n                ariaLabel=\"Loan Status Count Over Time Stacked Bar Chart\"\n                {...getNivoChartProps('stackedBar', isMobile, true, theme, loanStatusColors, null)}\n              />\n            </Box>\n          )}\n        </DialogContent>\n      </Dialog>\n    </Box>\n  );\n};\n\nCharts.propTypes = {\n  loans: PropTypes.arrayOf(PropTypes.shape({\n    startDate: PropTypes.string.isRequired,\n    principal: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    repaidAmount: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    repaymentSchedule: PropTypes.arrayOf(PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n      repaidAmount: PropTypes.number.isRequired,\n    })),\n  })),\n  selectedMonth: PropTypes.string.isRequired,\n};\n\nexport default Charts;\n"],"names":["dayjs","isBetween","Transition","React","props","ref","_jsx","Slide","_objectSpread","direction","calcStatus","loan","repaidAmount","principal","today","repaymentSchedule","length","sortedSchedule","sort","a","b","date","unix","item","isBefore","amount","getNivoChartProps","chartType","isMobile","isDialog","theme","loanStatusColors","nivoColors","commonTheme","getChartTheme","axis","ticks","text","fill","palette","secondary","fontSize","fontFamily","typography","legend","primary","fontWeight","grid","line","stroke","divider","strokeDasharray","tooltip","container","background","paper","color","borderRadius","boxShadow","shadows","padding","legends","margin","getMargin","top","right","bottom","left","colors","xScale","type","format","useUTC","precision","xFormat","yScale","min","max","stacked","reverse","yFormat","axisBottom","tickValues","legendOffset","legendPosition","tickRotation","axisLeft","pointSize","pointBorderWidth","pointBorderColor","from","anchor","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","symbolSize","symbolShape","effects","on","style","itemBackground","itemOpacity","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","borderWidth","borderColor","modifiers","arcLinkLabelsSkipAngle","arcLinkLabelsTextColor","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLabelsTextColor","itemTextColor","valueScale","indexScale","round","axisTop","axisRight","tickSize","tickPadding","labelSkipWidth","labelSkipHeight","labelTextColor","groupMode","value","dataFrom","data","map","id","label","_ref","loans","selectedMonth","useTheme","useMediaQuery","breakpoints","down","currentDisplayMonth","setCurrentDisplayMonth","useState","chartPaperHeight","chartInnerHeight","concat","openDialog","setOpenDialog","dialogChartConfig","setDialogChartConfig","useMemo","success","main","error","info","warning","handleOpenDialog","title","keys","arguments","undefined","indexBy","handleCloseDialog","calculatedLoans","calculatedStatus","latestDataMonth","sortedLoanDates","startDate","startOf","diff","useEffect","initialMonthFormatted","hasDataForInitialMonth","some","filteredLoansThisMonth","filter","monthlySummaryData","monthlyMap","Map","forEach","monthYear","has","set","disbursed","collected","get","Number","sortedData","Array","entries","_ref2","values","x","d","y","hasMonthlySummaryData","series","loanStatusData","statusCounts","statusName","Object","includes","status","loanAmountDistributionData","bins","range","count","loanStatusCountOverTimeData","monthlyStatusMap","monthKey","month","Active","Paid","Overdue","_jsxs","Box","sx","display","justifyContent","alignItems","height","p","children","CircularProgress","Typography","variant","ml","textAlign","NoDataMessage","_ref3","message","align","gap","mb","pt","IconButton","onClick","handlePreviousMonth","prevMonth","subtract","ArrowBackIcon","component","handleNextMonth","nextMonth","add","ArrowForwardIcon","Grid","spacing","xs","md","Paper","elevation","cursor","transition","Tooltip","size","HelpOutlineIcon","ResponsiveLine","ariaLabel","ResponsivePie","_ref4","ResponsiveBar","_ref5","Dialog","open","onClose","maxWidth","fullWidth","TransitionComponent","maxHeight","flexDirection","DialogTitle","pb","pr","CloseIcon","DialogContent","flexGrow","_ref6","_ref7"],"sourceRoot":""}