{"version":3,"file":"static/js/586.c9b9518b.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/esm/Link/linkClasses.js","../node_modules/@mui/material/esm/Link/getTextDecoration.js","../node_modules/@mui/material/esm/Link/Link.js","../node_modules/@mui/icons-material/esm/Google.js","pages/Login.jsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { getPath } from '@mui/system/style';\nimport { alpha } from '@mui/system/colorManipulator';\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = ownerState.color;\n  if ('colorSpace' in theme && theme.colorSpace) {\n    const color = getPath(theme, `palette.${transformedColor}.main`) || getPath(theme, `palette.${transformedColor}`) || ownerState.color;\n    return theme.alpha(color, 0.4);\n  }\n\n  // check the `main` color first for a custom palette, then fallback to the color itself\n  const color = getPath(theme, `palette.${transformedColor}.main`, false) || getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}.mainChannel`) || getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport elementTypeAcceptingRef from '@mui/utils/elementTypeAcceptingRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport isFocusVisible from '@mui/utils/isFocusVisible';\nimport capitalize from \"../utils/capitalize.js\";\nimport { styled, useTheme } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport linkClasses, { getLinkUtilityClass } from \"./linkClasses.js\";\nimport getTextDecoration from \"./getTextDecoration.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst v6Colors = {\n  primary: true,\n  secondary: true,\n  error: true,\n  info: true,\n  success: true,\n  warning: true,\n  textPrimary: true,\n  textSecondary: true,\n  textDisabled: true\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  return {\n    variants: [{\n      props: {\n        underline: 'none'\n      },\n      style: {\n        textDecoration: 'none'\n      }\n    }, {\n      props: {\n        underline: 'hover'\n      },\n      style: {\n        textDecoration: 'none',\n        '&:hover': {\n          textDecoration: 'underline'\n        }\n      }\n    }, {\n      props: {\n        underline: 'always'\n      },\n      style: {\n        textDecoration: 'underline',\n        '&:hover': {\n          textDecorationColor: 'inherit'\n        }\n      }\n    }, {\n      props: ({\n        underline,\n        ownerState\n      }) => underline === 'always' && ownerState.color !== 'inherit',\n      style: {\n        textDecorationColor: 'var(--Link-underlineColor)'\n      }\n    }, {\n      props: ({\n        underline,\n        ownerState\n      }) => underline === 'always' && ownerState.color === 'inherit',\n      style: theme.colorSpace ? {\n        textDecorationColor: theme.alpha('currentColor', 0.4)\n      } : null\n    }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n      props: {\n        underline: 'always',\n        color\n      },\n      style: {\n        '--Link-underlineColor': theme.alpha((theme.vars || theme).palette[color].main, 0.4)\n      }\n    })), {\n      props: {\n        underline: 'always',\n        color: 'textPrimary'\n      },\n      style: {\n        '--Link-underlineColor': theme.alpha((theme.vars || theme).palette.text.primary, 0.4)\n      }\n    }, {\n      props: {\n        underline: 'always',\n        color: 'textSecondary'\n      },\n      style: {\n        '--Link-underlineColor': theme.alpha((theme.vars || theme).palette.text.secondary, 0.4)\n      }\n    }, {\n      props: {\n        underline: 'always',\n        color: 'textDisabled'\n      },\n      style: {\n        '--Link-underlineColor': (theme.vars || theme).palette.text.disabled\n      }\n    }, {\n      props: {\n        component: 'button'\n      },\n      style: {\n        position: 'relative',\n        WebkitTapHighlightColor: 'transparent',\n        backgroundColor: 'transparent',\n        // Reset default value\n        // We disable the focus ring for mouse, touch and keyboard users.\n        outline: 0,\n        border: 0,\n        margin: 0,\n        // Remove the margin in Safari\n        borderRadius: 0,\n        padding: 0,\n        // Remove the padding in Firefox\n        cursor: 'pointer',\n        userSelect: 'none',\n        verticalAlign: 'middle',\n        MozAppearance: 'none',\n        // Reset\n        WebkitAppearance: 'none',\n        // Reset\n        '&::-moz-focus-inner': {\n          borderStyle: 'none' // Remove Firefox dotted outline.\n        },\n        [`&.${linkClasses.focusVisible}`]: {\n          outline: 'auto'\n        }\n      }\n    }]\n  };\n}));\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const theme = useTheme();\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit',\n    sx,\n    ...other\n  } = props;\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handleBlur = event => {\n    if (!isFocusVisible(event.target)) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    if (isFocusVisible(event.target)) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = {\n    ...props,\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, {\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: ref,\n    ownerState: ownerState,\n    variant: variant,\n    ...other,\n    sx: [...(v6Colors[color] === undefined ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])],\n    style: {\n      ...other.style,\n      ...(underline === 'always' && color !== 'inherit' && !v6Colors[color] && {\n        '--Link-underlineColor': getTextDecoration({\n          theme,\n          ownerState\n        })\n      })\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'success', 'error', 'info', 'warning', 'textPrimary', 'textSecondary', 'textDisabled']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](https://mui.com/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12.545,10.239v3.821h5.445c-0.712,2.315-2.647,3.972-5.445,3.972c-3.332,0-6.033-2.701-6.033-6.032s2.701-6.032,6.033-6.032c1.498,0,2.866,0.549,3.921,1.453l2.814-2.814C17.503,2.988,15.139,2,12.545,2C7.021,2,2.543,6.477,2.543,12s4.478,10,10.002,10c8.396,0,10.249-7.85,9.426-11.748L12.545,10.239z\"\n}), 'Google');","import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Alert,\n  Stack,\n  Link,\n  Divider,\n  CircularProgress, // Import CircularProgress for loading indicators\n} from \"@mui/material\";\nimport { useAuth } from \"../contexts/AuthProvider\";\nimport { useNavigate, Link as RouterLink } from \"react-router-dom\";\nimport { Google } from \"@mui/icons-material\";\n\nexport default function Login() {\n  const { login, loginWithGoogle, resetPassword, currentUser } = useAuth();\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [resetMessage, setResetMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false); // New loading state for general operations\n  const [isResetting, setIsResetting] = useState(false); // New loading state for password reset\n\n  useEffect(() => {\n    if (currentUser) {\n      navigate(\"/dashboard\");\n    }\n  }, [currentUser, navigate]);\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setError(\"\"); // Clear previous errors\n    setLoading(true); // Set loading state to true\n\n    try {\n      await login(email, password);\n      navigate(\"/dashboard\");\n    } catch (err) {\n      // More specific error handling\n      if (err.code === 'auth/user-not-found' || err.code === 'auth/wrong-password') {\n        setError(\"Invalid email or password. Please try again.\");\n      } else if (err.code === 'auth/too-many-requests') {\n        setError(\"Too many login attempts. Please try again later.\");\n      } else {\n        setError(\"Failed to log in. Please check your internet connection and try again.\");\n      }\n    } finally {\n      setLoading(false); // Reset loading state\n    }\n  };\n\n  const handleGoogleLogin = async () => {\n    setError(\"\"); // Clear previous errors\n    setLoading(true); // Set loading state to true\n\n    try {\n      await loginWithGoogle();\n      navigate(\"/dashboard\");\n    } catch (err) {\n      // More specific error for Google login\n      if (err.code === 'auth/popup-closed-by-user') {\n        setError(\"Google sign-in was cancelled.\");\n      } else if (err.code === 'auth/cancelled-popup-request') {\n        setError(\"Another Google sign-in request is already pending.\");\n      }\n      else {\n        setError(\"Google sign-in failed. Please try again.\");\n      }\n    } finally {\n      setLoading(false); // Reset loading state\n    }\n  };\n\n  const handleResetPassword = async () => {\n    setError(\"\");\n    setResetMessage(\"\");\n    if (!email) {\n      setError(\"Please enter your email to reset your password.\");\n      return;\n    }\n\n    setIsResetting(true); // Set loading state for reset\n    try {\n      await resetPassword(email);\n      setResetMessage(\"Password reset email sent. Check your inbox (and spam folder).\");\n    } catch (err) {\n      if (err.code === 'auth/user-not-found') {\n        setError(\"No account found with that email address.\");\n      } else {\n        setError(\"Failed to send reset email. Please try again.\");\n      }\n    } finally {\n      setIsResetting(false); // Reset loading state\n    }\n  };\n\n  return (\n    <Box height=\"100vh\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\" bgcolor=\"#e0f2f1\" p={2}>\n      <Box maxWidth={400} width=\"100%\" bgcolor=\"white\" p={4} borderRadius={2} boxShadow={3}>\n        <Typography variant=\"h4\" mb={3} color=\"primary\" sx={{ textAlign: 'center' }}>\n          Welcome Back!\n        </Typography>\n\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }} aria-live=\"polite\">\n            {error}\n          </Alert>\n        )}\n        {resetMessage && (\n          <Alert severity=\"success\" sx={{ mb: 2 }} aria-live=\"polite\">\n            {resetMessage}\n          </Alert>\n        )}\n\n        <form onSubmit={handleLogin}>\n          <Stack spacing={2}>\n            <TextField\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              fullWidth\n              variant=\"outlined\"\n              aria-label=\"Email address\"\n              disabled={loading || isResetting} // Disable when any operation is ongoing\n            />\n            <TextField\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              fullWidth\n              variant=\"outlined\"\n              aria-label=\"Password\"\n              disabled={loading || isResetting} // Disable when any operation is ongoing\n            />\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              fullWidth\n              disabled={loading || isResetting} // Disable button when loading or resetting\n              endIcon={loading && <CircularProgress size={20} color=\"inherit\" />} // Show loading indicator\n            >\n              {loading ? \"Logging In...\" : \"Log In\"}\n            </Button>\n\n            <Link\n              component=\"button\"\n              variant=\"body2\"\n              onClick={handleResetPassword}\n              disabled={loading || isResetting} // Disable link when loading or resetting\n              sx={{ alignSelf: 'flex-end' }} // Align to the right\n            >\n              {isResetting ? <CircularProgress size={16} color=\"inherit\" sx={{ mr: 1 }} /> : null}\n              Forgot password?\n            </Link>\n\n            <Divider>OR</Divider>\n\n            <Button\n              variant=\"outlined\"\n              startIcon={<Google />}\n              fullWidth\n              onClick={handleGoogleLogin}\n              disabled={loading || isResetting} // Disable button when loading or resetting\n              endIcon={loading && <CircularProgress size={20} color=\"inherit\" />} // Show loading indicator\n            >\n              {loading ? \"Signing In...\" : \"Sign in with Google\"}\n            </Button>\n\n            <Typography variant=\"body2\" align=\"center\">\n              Don’t have an account?{\" \"}\n              <Link component={RouterLink} to=\"/register\" disabled={loading || isResetting}>\n                Register\n              </Link>\n            </Typography>\n          </Stack>\n        </form>\n      </Box>\n    </Box>\n  );\n}\n"],"names":["getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_ref","theme","ownerState","transformedColor","color","colorSpace","getPath","concat","alpha","channelColor","_excluded","v6Colors","primary","secondary","error","info","success","warning","textPrimary","textSecondary","textDisabled","LinkRoot","styled","Typography","name","overridesResolver","props","styles","root","capitalize","underline","component","button","memoTheme","variants","style","textDecoration","textDecorationColor","_ref2","_ref3","Object","entries","palette","filter","createSimplePaletteValueFilter","map","_ref4","vars","main","text","disabled","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","React","inProps","ref","useDefaultProps","useTheme","className","onBlur","onFocus","TypographyClasses","variant","sx","other","_objectWithoutProperties","setFocusVisible","_objectSpread","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","event","isFocusVisible","target","undefined","Array","isArray","getTextDecoration","createSvgIcon","d","Login","login","loginWithGoogle","resetPassword","currentUser","useAuth","navigate","useNavigate","email","setEmail","useState","password","setPassword","setError","resetMessage","setResetMessage","loading","setLoading","isResetting","setIsResetting","useEffect","Box","height","display","justifyContent","alignItems","bgcolor","p","children","_jsxs","maxWidth","width","boxShadow","mb","textAlign","Alert","severity","onSubmit","async","e","preventDefault","err","code","Stack","spacing","TextField","label","type","value","onChange","required","fullWidth","Button","endIcon","CircularProgress","size","Link","onClick","alignSelf","mr","Divider","startIcon","Google","align","RouterLink","to"],"sourceRoot":""}