{"version":3,"file":"static/js/583.d6f3a6b9.chunk.js","mappings":"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","sources":["pages/AddPaymentPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  TextField,\n  Button,\n  Typography,\n  Stack,\n  Alert,\n  CircularProgress,\n  Autocomplete,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Paper,\n  useTheme,\n  Divider,\n  Card,\n  CardContent,\n  Chip,\n} from \"@mui/material\";\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport PersonIcon from '@mui/icons-material/Person';\nimport PhoneIcon from '@mui/icons-material/Phone';\nimport HourglassEmptyIcon from '@mui/icons-material/HourglassEmpty';\nimport { useFirestore } from \"../contexts/FirestoreProvider\";\nimport { toast } from \"react-toastify\";\n\nexport default function AddPaymentPage() {\n  const theme = useTheme();\n  const { loans, addPayment, loadingLoans } = useFirestore();\n\n  const [selectedLoan, setSelectedLoan] = useState(null);\n  const [paymentAmount, setPaymentAmount] = useState(\"\");\n  const [generalError, setGeneralError] = useState(\"\");\n  const [fieldErrors, setFieldErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\n\n  const setFieldError = (field, message) => {\n    setFieldErrors(prev => ({ ...prev, [field]: message }));\n  };\n\n  useEffect(() => { setFieldError('loan', ''); setGeneralError(''); }, [selectedLoan]);\n  useEffect(() => { setFieldError('amount', ''); setGeneralError(''); }, [paymentAmount]);\n\n  const validateForm = () => {\n    let valid = true;\n    const errors = {};\n\n    if (!selectedLoan) {\n      errors.loan = \"Please select a borrower/loan.\";\n      valid = false;\n    }\n\n    const numAmount = Number(paymentAmount);\n    if (isNaN(numAmount) || numAmount <= 0) {\n      errors.amount = \"Payment amount must be a valid positive number.\";\n      valid = false;\n    } else if (selectedLoan) {\n      const remainingBalance = selectedLoan.totalRepayable - (selectedLoan.repaidAmount || 0);\n      if (numAmount > remainingBalance + 0.0001) {\n        errors.amount = `Payment (ZMW ${numAmount.toFixed(2)}) exceeds remaining balance (ZMW ${remainingBalance.toFixed(2)}).`;\n        valid = false;\n      }\n    }\n\n    setFieldErrors(errors);\n    return valid;\n  };\n\n  const handleOpenConfirmation = (e) => {\n    e.preventDefault();\n    if (validateForm()) setOpenConfirmDialog(true);\n  };\n\n  const handleConfirmSubmit = async () => {\n    setOpenConfirmDialog(false);\n    setLoading(true);\n\n    try {\n      const numAmount = Number(paymentAmount);\n      await addPayment(selectedLoan.id, numAmount);\n      toast.success(`Payment of ZMW ${numAmount.toFixed(2).toLocaleString()} added for ${selectedLoan.borrower}!`);\n\n      setSelectedLoan(null);\n      setPaymentAmount(\"\");\n      setFieldErrors({});\n      setGeneralError(\"\");\n    } catch (err) {\n      console.error(\"Payment submission failed:\", err);\n      setGeneralError(\"Failed to add payment. Please try again.\");\n      toast.error(`Failed to add payment: ${err.message || \"Unknown error\"}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCloseConfirmDialog = () => setOpenConfirmDialog(false);\n\n  const currentRepaid = selectedLoan ? selectedLoan.repaidAmount || 0 : 0;\n  const remainingBalance = selectedLoan ? selectedLoan.totalRepayable - currentRepaid : 0;\n  const prospectiveRemaining = remainingBalance - Number(paymentAmount || 0);\n  \n  const textFieldStyles = {\n    \"& .MuiOutlinedInput-root\": {\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n        borderColor: theme.palette.secondary.main,\n      },\n    },\n    \"& .MuiInputLabel-root.Mui-focused\": {\n      color: theme.palette.secondary.main,\n    },\n  };\n\n  return (\n    <Paper\n      elevation={2}\n      sx={{\n        maxWidth: 500,\n        mx: \"auto\",\n        mt: 3,\n        p: 3,\n        border: (theme) => `2px solid ${theme.palette.primary.main}`,\n        borderRadius: 2,\n      }}\n    >\n      <Typography variant=\"h5\" sx={{ mb: 3 }}>\n        Add Payment\n      </Typography>\n\n      {generalError && (\n        <Alert severity=\"error\" onClose={() => setGeneralError(\"\")} sx={{ mb: 2 }}>\n          {generalError}\n        </Alert>\n      )}\n\n      <form onSubmit={handleOpenConfirmation}>\n        <Stack spacing={2}>\n          <Autocomplete\n            sx={textFieldStyles}\n            id=\"loan-borrower-search\"\n            options={loans.filter(loan => loan.status === \"Active\")}\n            getOptionLabel={(option) => option.borrower}\n            value={selectedLoan}\n            onChange={(e, newValue) => setSelectedLoan(newValue)}\n            loading={loadingLoans}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Search Borrower (Name or Phone)\"\n                placeholder=\"e.g., John Doe or 097xxxxxxx\"\n                required\n                error={!!fieldErrors.loan}\n                helperText={fieldErrors.loan || (loadingLoans ? \"Loading loans...\" : \"\")}\n                InputProps={{\n                  ...params.InputProps,\n                  endAdornment: (\n                    <>\n                      {loadingLoans ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                      {params.InputProps.endAdornment}\n                    </>\n                  ),\n                }}\n              />\n            )}\n            isOptionEqualToValue={(option, value) => option.id === value.id}\n            renderOption={(props, option) => {\n              const outstandingAmount = (option.totalRepayable - (option.repaidAmount || 0)).toFixed(2).toLocaleString();\n              return (\n                <Box \n                  component=\"li\" \n                  {...props} \n                  sx={{ \n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    width: '100%',\n                  }}\n                >\n                  <Typography \n                    variant=\"body1\" \n                    fontWeight=\"bold\"\n                    sx={{\n                      flexGrow: 1, \n                      whiteSpace: 'nowrap',\n                      overflow: 'hidden',\n                      textOverflow: 'ellipsis'\n                    }}\n                  >\n                    {option.borrower}\n                  </Typography>\n                  <Chip\n                    label={`ZMW ${outstandingAmount}`}\n                    color=\"primary\"\n                    size=\"small\"\n                  />\n                </Box>\n              );\n            }}\n            filterOptions={(options, { inputValue }) => {\n              const search = inputValue.toLowerCase();\n              return options.filter(\n                (option) =>\n                  option.borrower.toLowerCase().includes(search) ||\n                  option.phone.includes(search)\n              );\n            }}\n            noOptionsText=\"No active loans found for this search.\"\n          />\n\n          {selectedLoan && (\n            <Card\n              variant=\"outlined\"\n              sx={{\n                bgcolor: remainingBalance <= 0.01 ? theme.palette.success.light : theme.palette.action.hover,\n                borderColor: remainingBalance <= 0.01 ? theme.palette.success.main : theme.palette.divider,\n                p: 2,\n              }}\n            >\n              <CardContent sx={{ p: 0, \"&:last-child\": { pb: 0 } }}>\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1, fontWeight: 'bold' }}>\n                  Selected Loan Details\n                </Typography>\n                <Stack spacing={1}>\n                  <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                    <PersonIcon color=\"primary\" fontSize=\"small\" />\n                    <Typography variant=\"body2\" sx={{ flexGrow: 1 }}>\n                      Borrower: {selectedLoan.borrower}\n                    </Typography>\n                  </Box>\n                  <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                    <PhoneIcon color=\"primary\" fontSize=\"small\" />\n                    <Typography variant=\"body2\" sx={{ flexGrow: 1 }}>\n                      Phone: {selectedLoan.phone}\n                    </Typography>\n                  </Box>\n                  <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                    <MonetizationOnIcon color=\"primary\" fontSize=\"small\" />\n                    <Typography variant=\"body2\" sx={{ flexGrow: 1 }}>\n                      Principal: ZMW {selectedLoan.principal.toFixed(2).toLocaleString()}\n                    </Typography>\n                  </Box>\n                  <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                    <AccountBalanceWalletIcon color=\"primary\" fontSize=\"small\" />\n                    <Typography variant=\"body2\" sx={{ flexGrow: 1 }}>\n                      Total Repayable: ZMW {selectedLoan.totalRepayable.toFixed(2).toLocaleString()}\n                    </Typography>\n                  </Box>\n                  <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                    <CheckCircleOutlineIcon color=\"primary\" fontSize=\"small\" />\n                    <Typography variant=\"body2\" sx={{ flexGrow: 1 }}>\n                      Already Repaid: ZMW {currentRepaid.toFixed(2).toLocaleString()}\n                    </Typography>\n                  </Box>\n                </Stack>\n                \n                <Divider sx={{ my: 1 }} />\n\n                <Box display=\"flex\" alignItems=\"center\" gap={1} sx={{ mt: 1 }}>\n                  {remainingBalance <= 0.01 ? (\n                    <CheckCircleOutlineIcon color=\"success\" />\n                  ) : (\n                    <HourglassEmptyIcon color=\"error\" />\n                  )}\n                  <Typography\n                    variant=\"h6\"\n                    fontWeight=\"bold\"\n                    sx={{\n                      color: remainingBalance <= 0.01 ? \"success.main\" : \"text.primary\"\n                    }}\n                  >\n                    Remaining Balance: ZMW {remainingBalance.toFixed(2).toLocaleString()}\n                  </Typography>\n                </Box>\n              </CardContent>\n            </Card>\n          )}\n\n          <TextField\n            sx={textFieldStyles}\n            label=\"Payment Amount (ZMW)\"\n            value={paymentAmount}\n            onChange={(e) => setPaymentAmount(e.target.value)}\n            type=\"number\"\n            inputProps={{ min: 0.01, step: \"0.01\" }}\n            fullWidth\n            required\n            error={!!fieldErrors.amount}\n            helperText={fieldErrors.amount}\n            disabled={!selectedLoan || loading}\n          />\n\n          {selectedLoan && parseFloat(paymentAmount) > 0 && (\n            <Box\n              sx={{\n                p: 2,\n                bgcolor: prospectiveRemaining <= 0.01 ? theme.palette.success.light : 'background.paper',\n                borderRadius: 1,\n                border: \"1px dashed\",\n                borderColor: prospectiveRemaining <= 0.01 ? theme.palette.success.main : 'grey.300',\n              }}\n            >\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                After this payment, {selectedLoan.borrower}'s loan balance will be:\n              </Typography>\n              <Typography\n                variant=\"h6\"\n                fontWeight=\"bold\"\n                color={prospectiveRemaining <= 0.01 ? \"success.main\" : \"text.primary\"}\n              >\n                ZMW {Math.max(0, prospectiveRemaining).toFixed(2).toLocaleString()}\n                {prospectiveRemaining <= 0.01 && \" (Loan will be paid in full)\"}\n              </Typography>\n            </Box>\n          )}\n\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={loading || !selectedLoan || !paymentAmount || parseFloat(paymentAmount) <= 0}\n            startIcon={loading ? <CircularProgress size={20} color=\"inherit\" /> : null}\n          >\n            {loading ? \"Submitting...\" : \"Add Payment\"}\n          </Button>\n        </Stack>\n      </form>\n\n      <Dialog\n        open={openConfirmDialog}\n        onClose={handleCloseConfirmDialog}\n        aria-labelledby=\"confirm-payment-title\"\n        aria-describedby=\"confirm-payment-description\"\n      >\n        <DialogTitle id=\"confirm-payment-title\">{\"Confirm Payment\"}</DialogTitle>\n        <DialogContent>\n          {selectedLoan && (\n            <DialogContentText id=\"confirm-payment-description\">\n              You are about to add a payment of ZMW {Number(paymentAmount).toFixed(2).toLocaleString()}\n              for {selectedLoan.borrower}'s loan.\n              <br />\n              The current remaining balance is ZMW {remainingBalance.toFixed(2).toLocaleString()}.\n              <br />\n              After this payment, the remaining balance will be ZMW {Math.max(0, prospectiveRemaining).toFixed(2).toLocaleString()}.\n              {prospectiveRemaining <= 0.01 && \" (This loan will be marked as Paid.)\"}\n              <br />\n              <br />\n              Confirm to proceed?\n            </DialogContentText>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseConfirmDialog} disabled={loading}>\n            Cancel\n          </Button>\n          <Button\n            onClick={handleConfirmSubmit}\n            autoFocus\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={loading}\n          >\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Paper>\n  );\n}\n"],"names":["AddPaymentPage","theme","useTheme","loans","addPayment","loadingLoans","useFirestore","selectedLoan","setSelectedLoan","useState","paymentAmount","setPaymentAmount","generalError","setGeneralError","fieldErrors","setFieldErrors","loading","setLoading","openConfirmDialog","setOpenConfirmDialog","setFieldError","field","message","prev","_objectSpread","useEffect","handleCloseConfirmDialog","currentRepaid","repaidAmount","remainingBalance","totalRepayable","prospectiveRemaining","Number","textFieldStyles","borderColor","palette","secondary","main","color","_jsxs","Paper","elevation","sx","maxWidth","mx","mt","p","border","concat","primary","borderRadius","children","_jsx","Typography","variant","mb","Alert","severity","onClose","onSubmit","e","preventDefault","validateForm","valid","errors","loan","numAmount","isNaN","amount","toFixed","Stack","spacing","Autocomplete","id","options","filter","status","getOptionLabel","option","borrower","value","onChange","newValue","renderInput","params","TextField","label","placeholder","required","error","helperText","InputProps","endAdornment","_Fragment","CircularProgress","size","isOptionEqualToValue","renderOption","props","outstandingAmount","toLocaleString","Box","component","display","alignItems","justifyContent","width","fontWeight","flexGrow","whiteSpace","overflow","textOverflow","Chip","filterOptions","_ref","inputValue","search","toLowerCase","includes","phone","noOptionsText","Card","bgcolor","success","light","action","hover","divider","CardContent","pb","gap","PersonIcon","fontSize","PhoneIcon","MonetizationOnIcon","principal","AccountBalanceWalletIcon","CheckCircleOutlineIcon","Divider","my","HourglassEmptyIcon","target","type","inputProps","min","step","fullWidth","disabled","parseFloat","Math","max","Button","startIcon","Dialog","open","DialogTitle","DialogContent","DialogContentText","DialogActions","onClick","async","toast","err","console","autoFocus"],"sourceRoot":""}