rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Borrowers: Users can create, read, update, delete their own borrowers
    match /borrowers/{borrowerId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    // Loans: Users can manage their own loans
    match /loans/{loanId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    // Payments: Users can manage payments linked to their loans
    match /payments/{paymentId} {
       allow read, update, delete: if isOwner(get(/databases/$(database)/documents/loans/$(resource.data.loanId)).data.userId);
       allow create: if isOwner(get(/databases/$(database)/documents/loans/$(request.resource.data.loanId)).data.userId);
    }

    // Settings: Read-only for clients, updatable via backend/console
    match /settings/{config} {
      allow read: if request.auth != null;
      allow write: if false; // Or restrict to an admin role
    }

    // Activity Logs: Read-only for clients
    match /activityLogs/{logId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null; // Allow users to create logs
      allow update, delete: if false;
    }
  }
}
